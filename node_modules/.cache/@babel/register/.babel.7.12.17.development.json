{
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar config = require('./config'); // Application Packages\n\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser');\n\nvar cors = require('cors'); // Local Application\n\n\nvar routes = require('./routes'); // Services\n\n\nvar mongoose = require('./services/mongoose');\n\nvar webSocket = require('./services/websocket');\n\nvar App = /*#__PURE__*/function () {\n  function App() {\n    _classCallCheck(this, App);\n  }\n\n  _createClass(App, [{\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var app, server;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                console.log('Connecting to MongoDB');\n                console.log(config.mongoDB);\n                _context.next = 5;\n                return mongoose.connect();\n\n              case 5:\n                console.log('Connected to MongoDB');\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0.message);\n\n              case 11:\n                //\n                // Setup ExpressJS middleware, routes, etc\n                //\n                app = express();\n                app.enable('trust proxy');\n                app.use(cors());\n                app.use(bodyParser.urlencoded({\n                  extended: true\n                }));\n                app.use(bodyParser.json()); // app.use(bodyParser.raw({ type: '*/*' }))\n\n                app.use(routes); //\n                // Set port and start ExpressJS Server\n                //\n\n                server = app.listen(config.port, function () {\n                  console.log('Starting ExpressJS server');\n                  console.log(\"ExpressJS listening at http://\".concat(server.address().address, \":\").concat(server.address().port));\n                }); //\n                // Start the WebSocket Server\n                //\n\n                try {\n                  console.log('Starting Websocket server');\n                  webSocket.startServer(server);\n                  console.log('Websocket Server started');\n                } catch (err) {\n                  console.error(err);\n                }\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }]);\n\n  return App;\n}();\n\nnew App().start();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjb25maWciLCJyZXF1aXJlIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJjb3JzIiwicm91dGVzIiwibW9uZ29vc2UiLCJ3ZWJTb2NrZXQiLCJBcHAiLCJjb25zb2xlIiwibG9nIiwibW9uZ29EQiIsImNvbm5lY3QiLCJlcnJvciIsIm1lc3NhZ2UiLCJhcHAiLCJlbmFibGUiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic2VydmVyIiwibGlzdGVuIiwicG9ydCIsImFkZHJlc3MiLCJzdGFydFNlcnZlciIsImVyciIsInN0YXJ0Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0QixDLENBRUE7OztBQUNBLElBQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxJQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyxNQUFELENBQXBCLEMsQ0FFQTs7O0FBQ0EsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF0QixDLENBRUE7OztBQUNBLElBQU1LLFFBQVEsR0FBR0wsT0FBTyxDQUFDLHFCQUFELENBQXhCOztBQUNBLElBQU1NLFNBQVMsR0FBR04sT0FBTyxDQUFDLHNCQUFELENBQXpCOztJQUVNTyxHOzs7Ozs7OzsyRUFDSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUtJQyxnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVo7QUFDQUQsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVixNQUFNLENBQUNXLE9BQW5CO0FBTko7QUFBQSx1QkFPVUwsUUFBUSxDQUFDTSxPQUFULEVBUFY7O0FBQUE7QUFRSUgsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaO0FBUko7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFVSUQsZ0JBQUFBLE9BQU8sQ0FBQ0ksS0FBUixDQUFjLFlBQUlDLE9BQWxCOztBQVZKO0FBYUU7QUFDQTtBQUNBO0FBQ0lDLGdCQUFBQSxHQWhCTixHQWdCWWIsT0FBTyxFQWhCbkI7QUFpQkVhLGdCQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxhQUFYO0FBQ0FELGdCQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUWIsSUFBSSxFQUFaO0FBQ0FXLGdCQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUWQsVUFBVSxDQUFDZSxVQUFYLENBQXNCO0FBQUVDLGtCQUFBQSxRQUFRLEVBQUU7QUFBWixpQkFBdEIsQ0FBUjtBQUNBSixnQkFBQUEsR0FBRyxDQUFDRSxHQUFKLENBQVFkLFVBQVUsQ0FBQ2lCLElBQVgsRUFBUixFQXBCRixDQXFCRTs7QUFDQUwsZ0JBQUFBLEdBQUcsQ0FBQ0UsR0FBSixDQUFRWixNQUFSLEVBdEJGLENBd0JFO0FBQ0E7QUFDQTs7QUFDSWdCLGdCQUFBQSxNQTNCTixHQTJCZU4sR0FBRyxDQUFDTyxNQUFKLENBQVd0QixNQUFNLENBQUN1QixJQUFsQixFQUF3QixZQUFZO0FBQy9DZCxrQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVo7QUFDQUQsa0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUix5Q0FBNkNXLE1BQU0sQ0FBQ0csT0FBUCxHQUFpQkEsT0FBOUQsY0FBeUVILE1BQU0sQ0FBQ0csT0FBUCxHQUFpQkQsSUFBMUY7QUFDRCxpQkFIWSxDQTNCZixFQWdDRTtBQUNBO0FBQ0E7O0FBQ0Esb0JBQUk7QUFDRmQsa0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDJCQUFaO0FBQ0FILGtCQUFBQSxTQUFTLENBQUNrQixXQUFWLENBQXNCSixNQUF0QjtBQUNBWixrQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVo7QUFDRCxpQkFKRCxDQUlFLE9BQU9nQixHQUFQLEVBQVk7QUFDWmpCLGtCQUFBQSxPQUFPLENBQUNJLEtBQVIsQ0FBY2EsR0FBZDtBQUNEOztBQXpDSDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7Ozs7Ozs7O0FBNkNGLElBQUlsQixHQUFKLEdBQVVtQixLQUFWIiwic291cmNlUm9vdCI6Ii9ob21lL2hhcnZtYXN0ZXIvUHJvamVjdHMvR2FtZXNob3cvYXBpLyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBjb25maWcgPSByZXF1aXJlKCcuL2NvbmZpZycpXG5cbi8vIEFwcGxpY2F0aW9uIFBhY2thZ2VzXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKVxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKVxuXG4vLyBMb2NhbCBBcHBsaWNhdGlvblxuY29uc3Qgcm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMnKVxuXG4vLyBTZXJ2aWNlc1xuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCcuL3NlcnZpY2VzL21vbmdvb3NlJylcbmNvbnN0IHdlYlNvY2tldCA9IHJlcXVpcmUoJy4vc2VydmljZXMvd2Vic29ja2V0JylcblxuY2xhc3MgQXBwIHtcbiAgYXN5bmMgc3RhcnQgKCkge1xuICAgIC8vXG4gICAgLy8gU2V0dXAgTW9uZ29EQlxuICAgIC8vXG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW5nIHRvIE1vbmdvREInKVxuICAgICAgY29uc29sZS5sb2coY29uZmlnLm1vbmdvREIpXG4gICAgICBhd2FpdCBtb25nb29zZS5jb25uZWN0KClcbiAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gTW9uZ29EQicpXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVyci5tZXNzYWdlKVxuICAgIH1cbiAgICBcbiAgICAvL1xuICAgIC8vIFNldHVwIEV4cHJlc3NKUyBtaWRkbGV3YXJlLCByb3V0ZXMsIGV0Y1xuICAgIC8vXG4gICAgdmFyIGFwcCA9IGV4cHJlc3MoKVxuICAgIGFwcC5lbmFibGUoJ3RydXN0IHByb3h5JylcbiAgICBhcHAudXNlKGNvcnMoKSlcbiAgICBhcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKVxuICAgIGFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXG4gICAgLy8gYXBwLnVzZShib2R5UGFyc2VyLnJhdyh7IHR5cGU6ICcqLyonIH0pKVxuICAgIGFwcC51c2Uocm91dGVzKVxuXG4gICAgLy9cbiAgICAvLyBTZXQgcG9ydCBhbmQgc3RhcnQgRXhwcmVzc0pTIFNlcnZlclxuICAgIC8vXG4gICAgdmFyIHNlcnZlciA9IGFwcC5saXN0ZW4oY29uZmlnLnBvcnQsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdTdGFydGluZyBFeHByZXNzSlMgc2VydmVyJylcbiAgICAgIGNvbnNvbGUubG9nKGBFeHByZXNzSlMgbGlzdGVuaW5nIGF0IGh0dHA6Ly8ke3NlcnZlci5hZGRyZXNzKCkuYWRkcmVzc306JHtzZXJ2ZXIuYWRkcmVzcygpLnBvcnR9YClcbiAgICB9KVxuXG4gICAgLy9cbiAgICAvLyBTdGFydCB0aGUgV2ViU29ja2V0IFNlcnZlclxuICAgIC8vXG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKCdTdGFydGluZyBXZWJzb2NrZXQgc2VydmVyJylcbiAgICAgIHdlYlNvY2tldC5zdGFydFNlcnZlcihzZXJ2ZXIpXG4gICAgICBjb25zb2xlLmxvZygnV2Vic29ja2V0IFNlcnZlciBzdGFydGVkJylcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxuICAgIH1cbiAgfVxufVxuXG5uZXcgQXBwKCkuc3RhcnQoKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "config",
        "require",
        "express",
        "bodyParser",
        "cors",
        "routes",
        "mongoose",
        "webSocket",
        "App",
        "console",
        "log",
        "mongoDB",
        "connect",
        "error",
        "message",
        "app",
        "enable",
        "use",
        "urlencoded",
        "extended",
        "json",
        "server",
        "listen",
        "port",
        "address",
        "startServer",
        "err",
        "start"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB,C,CAEA;;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB,C,CAEA;;;AACA,IAAMK,QAAQ,GAAGL,OAAO,CAAC,qBAAD,CAAxB;;AACA,IAAMM,SAAS,GAAGN,OAAO,CAAC,sBAAD,CAAzB;;IAEMO,G;;;;;;;;2EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKIC,gBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACW,OAAnB;AANJ;AAAA,uBAOUL,QAAQ,CAACM,OAAT,EAPV;;AAAA;AAQIH,gBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AARJ;AAAA;;AAAA;AAAA;AAAA;AAUID,gBAAAA,OAAO,CAACI,KAAR,CAAc,YAAIC,OAAlB;;AAVJ;AAaE;AACA;AACA;AACIC,gBAAAA,GAhBN,GAgBYb,OAAO,EAhBnB;AAiBEa,gBAAAA,GAAG,CAACC,MAAJ,CAAW,aAAX;AACAD,gBAAAA,GAAG,CAACE,GAAJ,CAAQb,IAAI,EAAZ;AACAW,gBAAAA,GAAG,CAACE,GAAJ,CAAQd,UAAU,CAACe,UAAX,CAAsB;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ,iBAAtB,CAAR;AACAJ,gBAAAA,GAAG,CAACE,GAAJ,CAAQd,UAAU,CAACiB,IAAX,EAAR,EApBF,CAqBE;;AACAL,gBAAAA,GAAG,CAACE,GAAJ,CAAQZ,MAAR,EAtBF,CAwBE;AACA;AACA;;AACIgB,gBAAAA,MA3BN,GA2BeN,GAAG,CAACO,MAAJ,CAAWtB,MAAM,CAACuB,IAAlB,EAAwB,YAAY;AAC/Cd,kBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,kBAAAA,OAAO,CAACC,GAAR,yCAA6CW,MAAM,CAACG,OAAP,GAAiBA,OAA9D,cAAyEH,MAAM,CAACG,OAAP,GAAiBD,IAA1F;AACD,iBAHY,CA3Bf,EAgCE;AACA;AACA;;AACA,oBAAI;AACFd,kBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAH,kBAAAA,SAAS,CAACkB,WAAV,CAAsBJ,MAAtB;AACAZ,kBAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,iBAJD,CAIE,OAAOgB,GAAP,EAAY;AACZjB,kBAAAA,OAAO,CAACI,KAAR,CAAca,GAAd;AACD;;AAzCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AA6CF,IAAIlB,GAAJ,GAAUmB,KAAV",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/",
      "sourcesContent": [
        "'use strict'\n\nconst config = require('./config')\n\n// Application Packages\nconst express = require('express')\nconst bodyParser = require('body-parser')\nconst cors = require('cors')\n\n// Local Application\nconst routes = require('./routes')\n\n// Services\nconst mongoose = require('./services/mongoose')\nconst webSocket = require('./services/websocket')\n\nclass App {\n  async start () {\n    //\n    // Setup MongoDB\n    //\n    try {\n      console.log('Connecting to MongoDB')\n      console.log(config.mongoDB)\n      await mongoose.connect()\n      console.log('Connected to MongoDB')\n    } catch (err) {\n      console.error(err.message)\n    }\n    \n    //\n    // Setup ExpressJS middleware, routes, etc\n    //\n    var app = express()\n    app.enable('trust proxy')\n    app.use(cors())\n    app.use(bodyParser.urlencoded({ extended: true }))\n    app.use(bodyParser.json())\n    // app.use(bodyParser.raw({ type: '*/*' }))\n    app.use(routes)\n\n    //\n    // Set port and start ExpressJS Server\n    //\n    var server = app.listen(config.port, function () {\n      console.log('Starting ExpressJS server')\n      console.log(`ExpressJS listening at http://${server.address().address}:${server.address().port}`)\n    })\n\n    //\n    // Start the WebSocket Server\n    //\n    try {\n      console.log('Starting Websocket server')\n      webSocket.startServer(server)\n      console.log('Websocket Server started')\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\nnew App().start()\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1614762445272
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/config.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/config.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/config.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/",
        "sourceFileName": "config.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  port: 3000,\n  mongoDB: 'mongodb://Gameshow:gameshow@localhost:3104'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicG9ydCIsIm1vbmdvREIiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQUFJLEVBQUUsSUFETztBQUViQyxFQUFBQSxPQUFPLEVBQUU7QUFGSSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9oYXJ2bWFzdGVyL1Byb2plY3RzL0dhbWVzaG93L2FwaS8iLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBwb3J0OiAzMDAwLFxuICAgIG1vbmdvREI6ICdtb25nb2RiOi8vR2FtZXNob3c6Z2FtZXNob3dAbG9jYWxob3N0OjMxMDQnLFxuICB9XG4gICJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "module",
        "exports",
        "port",
        "mongoDB"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,IADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAjB",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/",
      "sourcesContent": [
        "module.exports = {\n    port: 3000,\n    mongoDB: 'mongodb://Gameshow:gameshow@localhost:3104',\n  }\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1614074210198
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/routes/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/routes/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/routes/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar express = require('express');\n\nvar router = express.Router();\n/**\n * CashPayServer routes\n * @namespace Routes\n */\n\n/**\n * Root Route\n * @memberof Routes\n *\n */\n\nvar RootRoute = function RootRoute() {\n  _classCallCheck(this, RootRoute);\n\n  router.use('/', require('./questions'));\n  router.use('/file', require('./file'));\n  return router;\n};\n\nmodule.exports = new RootRoute();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiUm9vdFJvdXRlIiwidXNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztJQUNNQyxTLEdBQ0oscUJBQWU7QUFBQTs7QUFDYkYsRUFBQUEsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQkosT0FBTyxDQUFDLGFBQUQsQ0FBdkI7QUFDQUMsRUFBQUEsTUFBTSxDQUFDRyxHQUFQLENBQVcsT0FBWCxFQUFvQkosT0FBTyxDQUFDLFFBQUQsQ0FBM0I7QUFFQSxTQUFPQyxNQUFQO0FBQ0QsQzs7QUFHSEksTUFBTSxDQUFDQyxPQUFQLEdBQWlCLElBQUlILFNBQUosRUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvaGFydm1hc3Rlci9Qcm9qZWN0cy9HYW1lc2hvdy9hcGkvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbi8qKlxuICogQ2FzaFBheVNlcnZlciByb3V0ZXNcbiAqIEBuYW1lc3BhY2UgUm91dGVzXG4gKi9cblxuLyoqXG4gKiBSb290IFJvdXRlXG4gKiBAbWVtYmVyb2YgUm91dGVzXG4gKlxuICovXG5jbGFzcyBSb290Um91dGUge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgcm91dGVyLnVzZSgnLycsIHJlcXVpcmUoJy4vcXVlc3Rpb25zJykpXG4gICAgcm91dGVyLnVzZSgnL2ZpbGUnLCByZXF1aXJlKCcuL2ZpbGUnKSlcblxuICAgIHJldHVybiByb3V0ZXJcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBSb290Um91dGUoKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "RootRoute",
        "use",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;IACMC,S,GACJ,qBAAe;AAAA;;AACbF,EAAAA,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgBJ,OAAO,CAAC,aAAD,CAAvB;AACAC,EAAAA,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoBJ,OAAO,CAAC,QAAD,CAA3B;AAEA,SAAOC,MAAP;AACD,C;;AAGHI,MAAM,CAACC,OAAP,GAAiB,IAAIH,SAAJ,EAAjB",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/",
      "sourcesContent": [
        "'use strict'\n\nconst express = require('express')\nconst router = express.Router()\n\n/**\n * CashPayServer routes\n * @namespace Routes\n */\n\n/**\n * Root Route\n * @memberof Routes\n *\n */\nclass RootRoute {\n  constructor () {\n    router.use('/', require('./questions'))\n    router.use('/file', require('./file'))\n\n    return router\n  }\n}\n\nmodule.exports = new RootRoute()\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1615242160762
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/routes/questions/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/routes/questions/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/questions/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/routes/questions/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/routes/questions/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/routes/questions/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/questions/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar config = require('../../config');\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar Board = require('../../models/board');\n\nvar Question = require('../../models/question');\n/**\n  * Question management routes\n  * @memberof Routes\n  */\n\n\nvar QuestionsRoute = /*#__PURE__*/function () {\n  function QuestionsRoute() {\n    _classCallCheck(this, QuestionsRoute);\n\n    router.put('/questions', this.editQuestion);\n    router.get('/board', this.getBoard);\n    router.post('/board', this.createBoard);\n    router.put('/board', this.editBoard);\n    router.get('/adminboard', this.getAdminBoard);\n    router.all('/all', this.getAllQuestions);\n    return router;\n  } // Returns all the questions when given a board id\n\n\n  _createClass(QuestionsRoute, [{\n    key: \"getAllQuestions\",\n    value: function () {\n      var _getAllQuestions = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getAllQuestions(_x, _x2) {\n        return _getAllQuestions.apply(this, arguments);\n      }\n\n      return getAllQuestions;\n    }() // Used to edit a card with a value\n\n  }, {\n    key: \"editQuestion\",\n    value: function () {\n      var _editQuestion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n        var question;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Question.findById(req.body.question.id);\n\n              case 2:\n                question = _context2.sent;\n\n                if (question) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", res.status(204).json({\n                  msg: 'That question id does not exist'\n                }));\n\n              case 5:\n                question.content = req.body.question.content;\n                question.price = req.body.question.price;\n                question.answer = req.body.question.answer;\n                question.topic = req.body.question.topic;\n                question.save().then(function (q) {\n                  return res.status(200).json(q.format);\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function editQuestion(_x3, _x4) {\n        return _editQuestion.apply(this, arguments);\n      }\n\n      return editQuestion;\n    }()\n  }, {\n    key: \"createBoard\",\n    value: function () {\n      var _createBoard = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n        var board, questionPromises, i, q;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log('Creating board');\n                board = new Board();\n                board.name = req.body.board.name;\n                board.increment = req.body.board.increment;\n                _context3.next = 6;\n                return board.save();\n\n              case 6:\n                board = _context3.sent;\n                questionPromises = []; // Create 25 empty questions for the board\n\n                for (i = 0; i < 25; i++) {\n                  q = new Question();\n                  q.content = {\n                    type: 'text',\n                    data: ''\n                  };\n                  q.topic = \"topic \".concat(i % 5 + 1);\n                  q.value = board.increment * (i % 5 + 1);\n                  q.boardId = board.id;\n                  questionPromises.push(q.save());\n                }\n\n                Promise.all(questionPromises).then(function (questions) {\n                  return res.status(201).json({\n                    board: board,\n                    questions: questions\n                  });\n                })[\"catch\"](function (err) {\n                  res.status(500).json({\n                    msg: 'An error occured when creating the example questions'\n                  });\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function createBoard(_x5, _x6) {\n        return _createBoard.apply(this, arguments);\n      }\n\n      return createBoard;\n    }()\n  }, {\n    key: \"getBoard\",\n    value: function () {\n      var _getBoard = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n        var board;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Board.findById(req.body.id);\n\n              case 2:\n                board = _context4.sent;\n                res.status(200).json(board.format());\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getBoard(_x7, _x8) {\n        return _getBoard.apply(this, arguments);\n      }\n\n      return getBoard;\n    }()\n  }, {\n    key: \"editBoard\",\n    value: function () {\n      var _editBoard = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n        var board;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Board.findById(req.body.board.id);\n\n              case 2:\n                board = _context5.sent;\n\n                if (board) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", res.status(204).json({\n                  msg: 'That board id could not be found'\n                }));\n\n              case 5:\n                board.name = req.body.board.name;\n                board.increment = req.body.board.increment;\n                board.save().then(function (b) {\n                  res.status(200).json(b);\n                });\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function editBoard(_x9, _x10) {\n        return _editBoard.apply(this, arguments);\n      }\n\n      return editBoard;\n    }()\n  }, {\n    key: \"getQuestion\",\n    value: function () {\n      var _getQuestion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getQuestion(_x11, _x12) {\n        return _getQuestion.apply(this, arguments);\n      }\n\n      return getQuestion;\n    }()\n  }, {\n    key: \"getAdminBoard\",\n    value: function () {\n      var _getAdminBoard = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n        var board, questions;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Board.findById(req.body.board.id);\n\n              case 2:\n                board = _context7.sent;\n                _context7.next = 5;\n                return Question.find({\n                  boardId: board.id\n                });\n\n              case 5:\n                questions = _context7.sent;\n                res.status(200).json({\n                  board: board,\n                  questions: questions\n                });\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getAdminBoard(_x13, _x14) {\n        return _getAdminBoard.apply(this, arguments);\n      }\n\n      return getAdminBoard;\n    }()\n  }]);\n\n  return QuestionsRoute;\n}();\n\nmodule.exports = new QuestionsRoute();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "config",
        "require",
        "express",
        "router",
        "Router",
        "Board",
        "Question",
        "QuestionsRoute",
        "put",
        "editQuestion",
        "get",
        "getBoard",
        "post",
        "createBoard",
        "editBoard",
        "getAdminBoard",
        "all",
        "getAllQuestions",
        "req",
        "res",
        "findById",
        "body",
        "question",
        "id",
        "status",
        "json",
        "msg",
        "content",
        "price",
        "answer",
        "topic",
        "save",
        "then",
        "q",
        "format",
        "console",
        "log",
        "board",
        "name",
        "increment",
        "questionPromises",
        "i",
        "type",
        "data",
        "value",
        "boardId",
        "push",
        "Promise",
        "questions",
        "err",
        "b",
        "find",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/questions/",
      "sourcesContent": [
        "'use strict'\n\nconst config = require('../../config')\n\nconst express = require('express')\nconst router = express.Router()\n\nconst Board = require('../../models/board')\nconst Question = require('../../models/question')\n\n/**\n  * Question management routes\n  * @memberof Routes\n  */\nclass QuestionsRoute {\n  constructor () {\n    router.put('/questions', this.editQuestion)\n    router.get('/board', this.getBoard)\n    router.post('/board', this.createBoard)\n    router.put('/board', this.editBoard)\n    router.get('/adminboard', this.getAdminBoard)\n    router.all('/all', this.getAllQuestions)\n    \n\n    return router\n  }\n\n  // Returns all the questions when given a board id\n  async getAllQuestions (req, res) {\n\n  }\n\n  // Used to edit a card with a value\n  async editQuestion (req, res) {\n    let question = await Question.findById(req.body.question.id)\n    if (!question) {\n      return res.status(204).json({ msg: 'That question id does not exist' })\n    }\n    question.content = req.body.question.content\n    question.price = req.body.question.price\n    question.answer = req.body.question.answer\n    question.topic = req.body.question.topic\n\n    question.save().then(q => {\n      return res.status(200).json(q.format)\n    })\n  }\n\n  async createBoard (req, res) {\n    console.log('Creating board')\n    let board = new Board()\n\n    board.name = req.body.board.name\n    board.increment = req.body.board.increment\n\n    board = await board.save()\n    \n    const questionPromises = []\n    // Create 25 empty questions for the board\n    for (let i = 0; i < 25; i++) {\n      const q = new Question()\n      q.content = {\n        type: 'text',\n        data: ''\n      }\n      q.topic = `topic ${i%5 + 1}`\n      q.value = board.increment*(i%5 + 1)\n      q.boardId = board.id\n      questionPromises.push(q.save()) \n    }\n    Promise.all(questionPromises).then(questions => {\n      return res.status(201).json({\n        board: board,\n        questions: questions\n      })\n    }).catch(err => {\n      res.status(500).json({ msg: 'An error occured when creating the example questions' })\n    })\n  }\n\n  async getBoard (req, res) {\n    const board = await Board.findById(req.body.id)\n    res.status(200).json(board.format())\n  }\n\n  async editBoard (req, res) {\n    const board = await Board.findById(req.body.board.id)\n    if (!board) {\n      return res.status(204).json({msg: 'That board id could not be found'})\n    }\n    board.name = req.body.board.name\n    board.increment = req.body.board.increment\n\n    board.save().then(b => {\n      res.status(200).json(b)\n    })\n  }\n\n  async getQuestion (req, res) {\n\n  }\n\n  async getAdminBoard (req, res) {\n    const board = await Board.findById(req.body.board.id)\n    const questions = await Question.find({ boardId: board.id })\n\n    res.status(200).json({ board, questions })\n  }\n}\n\nmodule.exports = new QuestionsRoute()\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1614074249618
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/models/board.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/models/board.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/models/board.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/models/board.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/models/",
        "sourceFileName": "board.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar config = require('../config');\n\nvar mongoose = require('mongoose');\n\nvar Question = require('./question');\n\nvar schema = new mongoose.Schema({\n  name: String,\n  increment: Number\n}, {\n  timestamps: true\n});\nschema.methods.format = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = this._id;\n          _context.t1 = this.name;\n          _context.t2 = this.increment;\n          _context.next = 5;\n          return Question.getQuestions(this._id);\n\n        case 5:\n          _context.t3 = _context.sent;\n          return _context.abrupt(\"return\", {\n            id: _context.t0,\n            name: _context.t1,\n            increment: _context.t2,\n            questions: _context.t3\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this);\n}));\nmodule.exports = mongoose.model('Board', schema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvYXJkLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsInJlcXVpcmUiLCJtb25nb29zZSIsIlF1ZXN0aW9uIiwic2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsIlN0cmluZyIsImluY3JlbWVudCIsIk51bWJlciIsInRpbWVzdGFtcHMiLCJtZXRob2RzIiwiZm9ybWF0IiwiX2lkIiwiZ2V0UXVlc3Rpb25zIiwiaWQiLCJxdWVzdGlvbnMiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBdEI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxJQUFNRSxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBQXhCOztBQUVBLElBQU1HLE1BQU0sR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQWIsQ0FBb0I7QUFDakNDLEVBQUFBLElBQUksRUFBRUMsTUFEMkI7QUFFakNDLEVBQUFBLFNBQVMsRUFBRUM7QUFGc0IsQ0FBcEIsRUFHWjtBQUNEQyxFQUFBQSxVQUFVLEVBQUU7QUFEWCxDQUhZLENBQWY7QUFPQU4sTUFBTSxDQUFDTyxPQUFQLENBQWVDLE1BQWYsd0VBQXdCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3QkFFaEIsS0FBS0MsR0FGVztBQUFBLHdCQUdkLEtBQUtQLElBSFM7QUFBQSx3QkFJVCxLQUFLRSxTQUpJO0FBQUE7QUFBQSxpQkFLSEwsUUFBUSxDQUFDVyxZQUFULENBQXNCLEtBQUtELEdBQTNCLENBTEc7O0FBQUE7QUFBQTtBQUFBO0FBRXBCRSxZQUFBQSxFQUZvQjtBQUdwQlQsWUFBQUEsSUFIb0I7QUFJcEJFLFlBQUFBLFNBSm9CO0FBS3BCUSxZQUFBQSxTQUxvQjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXhCO0FBVUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLFFBQVEsQ0FBQ2lCLEtBQVQsQ0FBZSxPQUFmLEVBQXdCZixNQUF4QixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9oYXJ2bWFzdGVyL1Byb2plY3RzL0dhbWVzaG93L2FwaS9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29uZmlnID0gcmVxdWlyZSgnLi4vY29uZmlnJylcblxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXG5jb25zdCBRdWVzdGlvbiA9IHJlcXVpcmUoJy4vcXVlc3Rpb24nKVxuXG5jb25zdCBzY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgbmFtZTogU3RyaW5nLFxuICBpbmNyZW1lbnQ6IE51bWJlclxufSwge1xuICB0aW1lc3RhbXBzOiB0cnVlXG59KVxuXG5zY2hlbWEubWV0aG9kcy5mb3JtYXQgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgaWQ6IHRoaXMuX2lkLFxuICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICBpbmNyZW1lbnQ6IHRoaXMuaW5jcmVtZW50LFxuICAgIHF1ZXN0aW9uczogYXdhaXQgUXVlc3Rpb24uZ2V0UXVlc3Rpb25zKHRoaXMuX2lkKVxuICB9XG59XG5cblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnQm9hcmQnLCBzY2hlbWEpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "board.js"
      ],
      "names": [
        "config",
        "require",
        "mongoose",
        "Question",
        "schema",
        "Schema",
        "name",
        "String",
        "increment",
        "Number",
        "timestamps",
        "methods",
        "format",
        "_id",
        "getQuestions",
        "id",
        "questions",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAMG,MAAM,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AACjCC,EAAAA,IAAI,EAAEC,MAD2B;AAEjCC,EAAAA,SAAS,EAAEC;AAFsB,CAApB,EAGZ;AACDC,EAAAA,UAAU,EAAE;AADX,CAHY,CAAf;AAOAN,MAAM,CAACO,OAAP,CAAeC,MAAf,wEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEhB,KAAKC,GAFW;AAAA,wBAGd,KAAKP,IAHS;AAAA,wBAIT,KAAKE,SAJI;AAAA;AAAA,iBAKHL,QAAQ,CAACW,YAAT,CAAsB,KAAKD,GAA3B,CALG;;AAAA;AAAA;AAAA;AAEpBE,YAAAA,EAFoB;AAGpBT,YAAAA,IAHoB;AAIpBE,YAAAA,SAJoB;AAKpBQ,YAAAA,SALoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAUAC,MAAM,CAACC,OAAP,GAAiBhB,QAAQ,CAACiB,KAAT,CAAe,OAAf,EAAwBf,MAAxB,CAAjB",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/models/",
      "sourcesContent": [
        "const config = require('../config')\n\nconst mongoose = require('mongoose')\nconst Question = require('./question')\n\nconst schema = new mongoose.Schema({\n  name: String,\n  increment: Number\n}, {\n  timestamps: true\n})\n\nschema.methods.format = async function () {\n  return {\n    id: this._id,\n    name: this.name,\n    increment: this.increment,\n    questions: await Question.getQuestions(this._id)\n  }\n}\n\n\nmodule.exports = mongoose.model('Board', schema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1613983809000
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/models/question.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/models/question.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/models/question.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/models/question.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/models/",
        "sourceFileName": "question.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar config = require('../config');\n\nvar mongoose = require('mongoose');\n\nvar Question = require('./question');\n\nvar schema = new mongoose.Schema({\n  content: Object,\n  price: Number,\n  answer: Object,\n  topic: String\n}, {\n  timestamps: true\n});\nschema.methods.format = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            id: this._id,\n            price: this.price,\n            content: this.content,\n            answer: this.answer,\n            topic: this.topic\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this);\n}));\n\nschema.methods.getQuestions = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(boardId) {\n    var questions, formatted;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return this.find({\n              boardId: boardId\n            });\n\n          case 2:\n            questions = _context2.sent;\n            formatted = questions.map(function (q) {\n              return q.format();\n            });\n            return _context2.abrupt(\"return\", formatted);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports = mongoose.model('Question', schema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9uLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsInJlcXVpcmUiLCJtb25nb29zZSIsIlF1ZXN0aW9uIiwic2NoZW1hIiwiU2NoZW1hIiwiY29udGVudCIsIk9iamVjdCIsInByaWNlIiwiTnVtYmVyIiwiYW5zd2VyIiwidG9waWMiLCJTdHJpbmciLCJ0aW1lc3RhbXBzIiwibWV0aG9kcyIsImZvcm1hdCIsImlkIiwiX2lkIiwiZ2V0UXVlc3Rpb25zIiwiYm9hcmRJZCIsImZpbmQiLCJxdWVzdGlvbnMiLCJmb3JtYXR0ZWQiLCJtYXAiLCJxIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXRCOztBQUVBLElBQU1DLFFBQVEsR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsSUFBTUUsUUFBUSxHQUFHRixPQUFPLENBQUMsWUFBRCxDQUF4Qjs7QUFFQSxJQUFNRyxNQUFNLEdBQUcsSUFBSUYsUUFBUSxDQUFDRyxNQUFiLENBQW9CO0FBQ2pDQyxFQUFBQSxPQUFPLEVBQUVDLE1BRHdCO0FBRWpDQyxFQUFBQSxLQUFLLEVBQUVDLE1BRjBCO0FBR2pDQyxFQUFBQSxNQUFNLEVBQUVILE1BSHlCO0FBSWpDSSxFQUFBQSxLQUFLLEVBQUVDO0FBSjBCLENBQXBCLEVBS1o7QUFDREMsRUFBQUEsVUFBVSxFQUFFO0FBRFgsQ0FMWSxDQUFmO0FBU0FULE1BQU0sQ0FBQ1UsT0FBUCxDQUFlQyxNQUFmLHdFQUF3QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMkNBQ2Y7QUFDTEMsWUFBQUEsRUFBRSxFQUFFLEtBQUtDLEdBREo7QUFFTFQsWUFBQUEsS0FBSyxFQUFFLEtBQUtBLEtBRlA7QUFHTEYsWUFBQUEsT0FBTyxFQUFFLEtBQUtBLE9BSFQ7QUFJTEksWUFBQUEsTUFBTSxFQUFFLEtBQUtBLE1BSlI7QUFLTEMsWUFBQUEsS0FBSyxFQUFFLEtBQUtBO0FBTFAsV0FEZTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUF4Qjs7QUFVQVAsTUFBTSxDQUFDVSxPQUFQLENBQWVJLFlBQWY7QUFBQSxzRUFBOEIsa0JBQWdCQyxPQUFoQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNKLEtBQUtDLElBQUwsQ0FBVTtBQUFFRCxjQUFBQSxPQUFPLEVBQVBBO0FBQUYsYUFBVixDQURJOztBQUFBO0FBQ3RCRSxZQUFBQSxTQURzQjtBQUV0QkMsWUFBQUEsU0FGc0IsR0FFVkQsU0FBUyxDQUFDRSxHQUFWLENBQWMsVUFBQUMsQ0FBQztBQUFBLHFCQUFJQSxDQUFDLENBQUNULE1BQUYsRUFBSjtBQUFBLGFBQWYsQ0FGVTtBQUFBLDhDQUdyQk8sU0FIcUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBOUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBTUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnhCLFFBQVEsQ0FBQ3lCLEtBQVQsQ0FBZSxVQUFmLEVBQTJCdkIsTUFBM0IsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvaGFydm1hc3Rlci9Qcm9qZWN0cy9HYW1lc2hvdy9hcGkvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoJy4uL2NvbmZpZycpXG5cbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxuY29uc3QgUXVlc3Rpb24gPSByZXF1aXJlKCcuL3F1ZXN0aW9uJylcblxuY29uc3Qgc2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIGNvbnRlbnQ6IE9iamVjdCxcbiAgcHJpY2U6IE51bWJlcixcbiAgYW5zd2VyOiBPYmplY3QsXG4gIHRvcGljOiBTdHJpbmdcbn0sIHtcbiAgdGltZXN0YW1wczogdHJ1ZVxufSlcblxuc2NoZW1hLm1ldGhvZHMuZm9ybWF0ID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICByZXR1cm4ge1xuICAgIGlkOiB0aGlzLl9pZCxcbiAgICBwcmljZTogdGhpcy5wcmljZSxcbiAgICBjb250ZW50OiB0aGlzLmNvbnRlbnQsXG4gICAgYW5zd2VyOiB0aGlzLmFuc3dlcixcbiAgICB0b3BpYzogdGhpcy50b3BpY1xuICB9XG59XG5cbnNjaGVtYS5tZXRob2RzLmdldFF1ZXN0aW9ucyA9IGFzeW5jIGZ1bmN0aW9uIChib2FyZElkKSB7XG4gIGNvbnN0IHF1ZXN0aW9ucyA9IGF3YWl0IHRoaXMuZmluZCh7IGJvYXJkSWQgfSlcbiAgY29uc3QgZm9ybWF0dGVkID0gcXVlc3Rpb25zLm1hcChxID0+IHEuZm9ybWF0KCkpXG4gIHJldHVybiBmb3JtYXR0ZWQgIFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdRdWVzdGlvbicsIHNjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "question.js"
      ],
      "names": [
        "config",
        "require",
        "mongoose",
        "Question",
        "schema",
        "Schema",
        "content",
        "Object",
        "price",
        "Number",
        "answer",
        "topic",
        "String",
        "timestamps",
        "methods",
        "format",
        "id",
        "_id",
        "getQuestions",
        "boardId",
        "find",
        "questions",
        "formatted",
        "map",
        "q",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAMG,MAAM,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AACjCC,EAAAA,OAAO,EAAEC,MADwB;AAEjCC,EAAAA,KAAK,EAAEC,MAF0B;AAGjCC,EAAAA,MAAM,EAAEH,MAHyB;AAIjCI,EAAAA,KAAK,EAAEC;AAJ0B,CAApB,EAKZ;AACDC,EAAAA,UAAU,EAAE;AADX,CALY,CAAf;AASAT,MAAM,CAACU,OAAP,CAAeC,MAAf,wEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,2CACf;AACLC,YAAAA,EAAE,EAAE,KAAKC,GADJ;AAELT,YAAAA,KAAK,EAAE,KAAKA,KAFP;AAGLF,YAAAA,OAAO,EAAE,KAAKA,OAHT;AAILI,YAAAA,MAAM,EAAE,KAAKA,MAJR;AAKLC,YAAAA,KAAK,EAAE,KAAKA;AALP,WADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUAP,MAAM,CAACU,OAAP,CAAeI,YAAf;AAAA,sEAA8B,kBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJ,KAAKC,IAAL,CAAU;AAAED,cAAAA,OAAO,EAAPA;AAAF,aAAV,CADI;;AAAA;AACtBE,YAAAA,SADsB;AAEtBC,YAAAA,SAFsB,GAEVD,SAAS,CAACE,GAAV,CAAc,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACT,MAAF,EAAJ;AAAA,aAAf,CAFU;AAAA,8CAGrBO,SAHqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAMAG,MAAM,CAACC,OAAP,GAAiBxB,QAAQ,CAACyB,KAAT,CAAe,UAAf,EAA2BvB,MAA3B,CAAjB",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/models/",
      "sourcesContent": [
        "const config = require('../config')\n\nconst mongoose = require('mongoose')\nconst Question = require('./question')\n\nconst schema = new mongoose.Schema({\n  content: Object,\n  price: Number,\n  answer: Object,\n  topic: String\n}, {\n  timestamps: true\n})\n\nschema.methods.format = async function () {\n  return {\n    id: this._id,\n    price: this.price,\n    content: this.content,\n    answer: this.answer,\n    topic: this.topic\n  }\n}\n\nschema.methods.getQuestions = async function (boardId) {\n  const questions = await this.find({ boardId })\n  const formatted = questions.map(q => q.format())\n  return formatted  \n}\n\nmodule.exports = mongoose.model('Question', schema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1613984059834
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/services/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/services/mongoose.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/services/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/services/mongoose.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/services/mongoose.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/services/mongoose.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/services/",
        "sourceFileName": "mongoose.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar config = require('../config');\n\nvar mongoose = require('mongoose');\n\nmongoose.connection.on('connected', function () {\n  console.log('MongoDB is connected');\n});\nmongoose.connection.on('error', function (err) {\n  console.log(\"Could not connect to MongoDB because of \".concat(err));\n  process.exit(1);\n});\nmongoose.set('debug', false);\nexports.connect = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          mongoose.connect(config.mongoDB, {\n            keepAlive: 1,\n            useNewUrlParser: true\n          });\n          mongoose.set('useCreateIndex', true);\n          return _context.abrupt(\"return\", mongoose.connection);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbmdvb3NlLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsInJlcXVpcmUiLCJtb25nb29zZSIsImNvbm5lY3Rpb24iLCJvbiIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJwcm9jZXNzIiwiZXhpdCIsInNldCIsImV4cG9ydHMiLCJjb25uZWN0IiwibW9uZ29EQiIsImtlZXBBbGl2ZSIsInVzZU5ld1VybFBhcnNlciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUVBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBdEI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQUMsUUFBUSxDQUFDQyxVQUFULENBQW9CQyxFQUFwQixDQUF1QixXQUF2QixFQUFvQyxZQUFNO0FBQ3hDQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQkFBWjtBQUNELENBRkQ7QUFJQUosUUFBUSxDQUFDQyxVQUFULENBQW9CQyxFQUFwQixDQUF1QixPQUF2QixFQUFnQyxVQUFDRyxHQUFELEVBQVM7QUFDdkNGLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixtREFBdURDLEdBQXZEO0FBQ0FDLEVBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLENBQWI7QUFDRCxDQUhEO0FBS0FQLFFBQVEsQ0FBQ1EsR0FBVCxDQUFhLE9BQWIsRUFBc0IsS0FBdEI7QUFFQUMsT0FBTyxDQUFDQyxPQUFSLHdFQUFrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2hCVixVQUFBQSxRQUFRLENBQUNVLE9BQVQsQ0FBaUJaLE1BQU0sQ0FBQ2EsT0FBeEIsRUFBaUM7QUFDL0JDLFlBQUFBLFNBQVMsRUFBRSxDQURvQjtBQUUvQkMsWUFBQUEsZUFBZSxFQUFFO0FBRmMsV0FBakM7QUFLQWIsVUFBQUEsUUFBUSxDQUFDUSxHQUFULENBQWEsZ0JBQWIsRUFBK0IsSUFBL0I7QUFOZ0IsMkNBUVRSLFFBQVEsQ0FBQ0MsVUFSQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUFsQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9oYXJ2bWFzdGVyL1Byb2plY3RzL0dhbWVzaG93L2FwaS9zZXJ2aWNlcy8iLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgY29uZmlnID0gcmVxdWlyZSgnLi4vY29uZmlnJylcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxuXG5tb25nb29zZS5jb25uZWN0aW9uLm9uKCdjb25uZWN0ZWQnLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdNb25nb0RCIGlzIGNvbm5lY3RlZCcpXG59KVxuXG5tb25nb29zZS5jb25uZWN0aW9uLm9uKCdlcnJvcicsIChlcnIpID0+IHtcbiAgY29uc29sZS5sb2coYENvdWxkIG5vdCBjb25uZWN0IHRvIE1vbmdvREIgYmVjYXVzZSBvZiAke2Vycn1gKVxuICBwcm9jZXNzLmV4aXQoMSlcbn0pXG5cbm1vbmdvb3NlLnNldCgnZGVidWcnLCBmYWxzZSlcblxuZXhwb3J0cy5jb25uZWN0ID0gYXN5bmMgKCkgPT4ge1xuICBtb25nb29zZS5jb25uZWN0KGNvbmZpZy5tb25nb0RCLCB7XG4gICAga2VlcEFsaXZlOiAxLFxuICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZVxuICB9KVxuXG4gIG1vbmdvb3NlLnNldCgndXNlQ3JlYXRlSW5kZXgnLCB0cnVlKVxuXG4gIHJldHVybiBtb25nb29zZS5jb25uZWN0aW9uXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "mongoose.js"
      ],
      "names": [
        "config",
        "require",
        "mongoose",
        "connection",
        "on",
        "console",
        "log",
        "err",
        "process",
        "exit",
        "set",
        "exports",
        "connect",
        "mongoDB",
        "keepAlive",
        "useNewUrlParser"
      ],
      "mappings": "AAAA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AAEAC,QAAQ,CAACC,UAAT,CAAoBC,EAApB,CAAuB,WAAvB,EAAoC,YAAM;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,CAFD;AAIAJ,QAAQ,CAACC,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAACG,GAAD,EAAS;AACvCF,EAAAA,OAAO,CAACC,GAAR,mDAAuDC,GAAvD;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD,CAHD;AAKAP,QAAQ,CAACQ,GAAT,CAAa,OAAb,EAAsB,KAAtB;AAEAC,OAAO,CAACC,OAAR,wEAAkB;AAAA;AAAA;AAAA;AAAA;AAChBV,UAAAA,QAAQ,CAACU,OAAT,CAAiBZ,MAAM,CAACa,OAAxB,EAAiC;AAC/BC,YAAAA,SAAS,EAAE,CADoB;AAE/BC,YAAAA,eAAe,EAAE;AAFc,WAAjC;AAKAb,UAAAA,QAAQ,CAACQ,GAAT,CAAa,gBAAb,EAA+B,IAA/B;AANgB,2CAQTR,QAAQ,CAACC,UARA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/services/",
      "sourcesContent": [
        "'use strict'\n\nconst config = require('../config')\nconst mongoose = require('mongoose')\n\nmongoose.connection.on('connected', () => {\n  console.log('MongoDB is connected')\n})\n\nmongoose.connection.on('error', (err) => {\n  console.log(`Could not connect to MongoDB because of ${err}`)\n  process.exit(1)\n})\n\nmongoose.set('debug', false)\n\nexports.connect = async () => {\n  mongoose.connect(config.mongoDB, {\n    keepAlive: 1,\n    useNewUrlParser: true\n  })\n\n  mongoose.set('useCreateIndex', true)\n\n  return mongoose.connection\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1613777120000
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/services/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/services/websocket.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/services/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/services/websocket.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/services/websocket.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/services/websocket.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/services/",
        "sourceFileName": "websocket.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar config = require('../config');\n\nvar SocketIO = require('socket.io');\n\nvar _require = require('mongoose'),\n    Mongoose = _require.Mongoose;\n\nvar _require2 = require('nodemon'),\n    emit = _require2.emit;\n\nvar Jeopardy = require('./JeopardySockets');\n/*\n * The host will generate a join code for the game which will be saved to the subscriptions array\n * The host will be identified as being index 0 in the array\n * \n * If the code the client has submitted does not exist, its assumed they are starting a new lobby\n * When a client disconnects, it will check if they are index 0 client; if true, the lobby will be destroyed\n * \n * TODO:\n * work out how to attach username to client along with score\n *  - Create a cookie on the client that will lock the username to that player and maybe a uuid. Use this to determine if the player is rejoining or a new player\n * \n * msg requirements: \n *  - User uuid - This will not be given to any other players\n *  - lobby id\n *  - \n*/\n\n/**\n * WebSocket Library for Notifying Clients of Payment Events\n * @memberof Services\n */\n\n\nvar WebSocket = /*#__PURE__*/function () {\n  function WebSocket() {\n    _classCallCheck(this, WebSocket);\n\n    this.games = {\n      0: {\n        players: [],\n        questions: {\n          '0': null\n        },\n        buzzer: {\n          unlocked: false,\n          buzzed: [{\n            uuid: ''\n          }]\n        }\n      }\n    };\n  }\n  /**\n   * Setup the Websocket server\n   */\n\n\n  _createClass(WebSocket, [{\n    key: \"startServer\",\n    value: function () {\n      var _startServer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(server) {\n        var _this = this;\n\n        var socket;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Setup Websockets\n                socket = SocketIO(server, {\n                  cors: {\n                    origin: \"*\",\n                    methods: ['GET', 'POST']\n                  }\n                });\n                socket.on('connection', function (client) {\n                  return _this._onConnection(client);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function startServer(_x) {\n        return _startServer.apply(this, arguments);\n      }\n\n      return startServer;\n    }()\n  }, {\n    key: \"onJoin\",\n    value: function () {\n      var _onJoin = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(client, msg) {\n        var playerIndex;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.games[msg.lobbyId]) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                this.createGame(client, msg);\n                return _context2.abrupt(\"return\", client.emit('created', {\n                  questions: this.getQuestions(msg.lobbyId),\n                  buzzer: this.games[lobbyId].buzzer,\n                  board: {\n                    revealed: this.games[lobbyId].revealed,\n                    \"in\": this.games[lobbyId].board[\"in\"]\n                  }\n                }));\n\n              case 3:\n                if (!(msg.uuid === this.games[msg.lobbyId].host.uuid)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                this.games[msg.lobbyId].host.client = client;\n                this.games[msg.lobbyId].host.connected = true;\n                return _context2.abrupt(\"return\", this.notify('host-join', {\n                  description: 'The host has rejoined the lobby'\n                }));\n\n              case 7:\n                // Add the player to the lobby if they werent already\n                playerIndex = this.games[msg.lobbyId].players.findIndex(function (player) {\n                  return msg.uuid === player.uuid;\n                });\n\n                if (!playerIndex) {\n                  this.games[msg.lobbyId].players.push({\n                    client: client,\n                    uuid: msg.uuid,\n                    username: msg.username,\n                    score: 0,\n                    avatar: msg.avatar,\n                    connected: true\n                  });\n                } else {\n                  this.games[msg.lobbyId].players[playerIndex].client = client;\n                  this.games[msg.lobbyId].players[playerIndex].connected = true;\n                } // Send the new player the board and questions\n\n\n                client.emit('board', {\n                  questions: this.getQuestions(msg.lobbyId),\n                  buzzer: this.games[lobbyId].buzzer,\n                  board: {\n                    revealed: this.games[lobbyId].revealed,\n                    \"in\": this.games[lobbyId].board[\"in\"]\n                  }\n                }); // Notify other players\n\n                return _context2.abrupt(\"return\", this.notify(msg.lobbyId, 'player-joined', {\n                  players: this.getPlayers(),\n                  description: \"\".concat(msg.username, \" has joined the lobby\")\n                }));\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onJoin(_x2, _x3) {\n        return _onJoin.apply(this, arguments);\n      }\n\n      return onJoin;\n    }()\n  }, {\n    key: \"onLeave\",\n    value: function () {\n      var _onLeave = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(client, msg) {\n        var playerIndex;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.games[msg.lobbyId]) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", client.emit('error', {\n                  code: 204,\n                  description: 'Game does not exist'\n                }));\n\n              case 2:\n                if (!(msg.uuid === this.games[msg.lobbyId].host.uuid)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                this.games[msg.lobbyId].host.connected = false;\n                this.notify(msg.lobbyId, 'host-leave', {\n                  description: 'The host has left the lobby. Lobby will be destroyed in 5 minutes if they do not reconnect'\n                });\n                setTimeout(function () {\n                  if (this.games[msg.lobbyId].host.connected) return;\n                  delete this.games[msg.lobbyId];\n                  this.notify(msg.lobbyId, 'lobby-destroyed', {\n                    description: 'The host did not reconnect to the lobby'\n                  });\n                }, 5 * 60 * 1000);\n                _context3.next = 13;\n                break;\n\n              case 8:\n                // For normal players\n                playerIndex = this.games[msg.lobbyId].players.findIndex(function (player) {\n                  return msg.uuid === player.uuid;\n                });\n\n                if (playerIndex) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 11:\n                this.games[msg.lobbyId].players[playerIndex].connected = false;\n                this.notify(msg.lobbyId, 'player-leave', {\n                  players: this.getPlayers(msg.lobbyId),\n                  description: \"\".concat(this.getUsername(msg.uuid), \" has left the game\")\n                });\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onLeave(_x4, _x5) {\n        return _onLeave.apply(this, arguments);\n      }\n\n      return onLeave;\n    }() // Called when the host tries to reveal the question to the players\n\n  }, {\n    key: \"onRevealQuestion\",\n    value: function () {\n      var _onRevealQuestion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(client, msg) {\n        var lobbyId, questionId, question;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n                questionId = msg.quesitonId;\n\n                if (!(msg.uuid !== this.games[lobbyId].host.uuid)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", client.emit('error', {\n                  code: 401,\n                  description: 'You are not the host. Card can not be revealed'\n                }));\n\n              case 4:\n                this.games[lobbyId].board[\"in\"] = questionId;\n                question = this.getQuestion(questionId);\n                this.notify(lobbyId, 'reveal', {\n                  type: 'question',\n                  question: {\n                    content: question.content,\n                    id: quesiton.id,\n                    price: question.price\n                  },\n                  \"in\": questionId\n                });\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onRevealQuestion(_x6, _x7) {\n        return _onRevealQuestion.apply(this, arguments);\n      }\n\n      return onRevealQuestion;\n    }() // Called when the host tries to reveal the answer to the players\n\n  }, {\n    key: \"onRevealAnswer\",\n    value: function () {\n      var _onRevealAnswer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(client, msg) {\n        var lobbyId, questionId;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n                questionId = msg.quesitonId;\n\n                if (!(msg.uuid !== this.games[lobbyId].host.uuid)) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", client.emit('error', {\n                  code: 401,\n                  description: 'You are not the host. Card can not be revealed'\n                }));\n\n              case 4:\n                this.games[lobbyId].board[\"in\"] = '';\n                this.games[lobbyId].board.revealed.push(questionId);\n                this.notify(lobbyId, 'reveal', {\n                  type: 'answer',\n                  question: {\n                    content: question.content,\n                    id: quesiton.id,\n                    price: question.price,\n                    answer: question.answer\n                  },\n                  \"in\": '',\n                  revealed: this.games[lobbyId].board.revealed\n                });\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function onRevealAnswer(_x8, _x9) {\n        return _onRevealAnswer.apply(this, arguments);\n      }\n\n      return onRevealAnswer;\n    }() // Called when a player attempts to buzz in\n\n  }, {\n    key: \"onBuzz\",\n    value: function () {\n      var _onBuzz = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(client, msg) {\n        var lobbyId;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n\n                if (this.games[lobbyId].buzzer.unlocked) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", client.emit('error', {\n                  code: 401,\n                  description: 'The buzzer has not been unlocked yet'\n                }));\n\n              case 3:\n                this.games[lobbyId].buzzer.buzzed.push(this.getUsername(msg.uuid));\n                this.notify(lobbyId, 'buzzed', {\n                  player: this.getUsername(lobbyId, msg.uuid),\n                  buzzer: this.games[lobbyId].buzzer\n                });\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function onBuzz(_x10, _x11) {\n        return _onBuzz.apply(this, arguments);\n      }\n\n      return onBuzz;\n    }() // Called when the host unlocks the players' ability to buzz in\n\n  }, {\n    key: \"onBuzzerUnlock\",\n    value: function () {\n      var _onBuzzerUnlock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(client, msg) {\n        var lobbyId;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n\n                if (!(msg.uuid !== this.games[lobbyId].host.uuid)) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", client.emit('error', {\n                  code: 401,\n                  description: 'You are not the host. Buzzer can not be unlocked'\n                }));\n\n              case 3:\n                this.games[lobbyId].buzzer.unlocked = true;\n                this.notify(lobbyId, 'buzzer-unlocked', {\n                  buzzer: this.games[lobbyId].buzzer,\n                  description: 'The buzzer has been unlocked'\n                });\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function onBuzzerUnlock(_x12, _x13) {\n        return _onBuzzerUnlock.apply(this, arguments);\n      }\n\n      return onBuzzerUnlock;\n    }()\n  }, {\n    key: \"onBuzzerLock\",\n    value: function () {\n      var _onBuzzerLock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(client, msg) {\n        var lobbyId;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n\n                if (!(msg.uuid !== this.games[lobbyId].host.uuid)) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", client.emit('error', {\n                  code: 401,\n                  description: 'You are not the host. Buzzer can not be locked'\n                }));\n\n              case 3:\n                this.games[lobbyId].buzzer.unlocked = false;\n                this.notify(lobbyId, 'buzzer-locked', {\n                  buzzer: this.games[lobbyId].buzzer,\n                  description: 'The buzzer has been locked'\n                });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function onBuzzerLock(_x14, _x15) {\n        return _onBuzzerLock.apply(this, arguments);\n      }\n\n      return onBuzzerLock;\n    }()\n  }, {\n    key: \"onBuzzerReset\",\n    value: function () {\n      var _onBuzzerReset = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(client, msg) {\n        var lobbyId;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n\n                if (!(msg.uuid !== this.games[lobbyId].host.uuid)) {\n                  _context9.next = 3;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", client.emit('error', {\n                  code: 401,\n                  description: 'You are not the host. Buzzer can not be reset'\n                }));\n\n              case 3:\n                // Either remove a single user or all users from buzzed\n                if (msg.target > 0) {\n                  this.games[lobbyId].buzzer.buzzed = this.games[lobbyId].buzzer.buzzed.filter(function (username) {\n                    return username !== msg.target;\n                  });\n                } else {\n                  this.games[lobbyId].buzzer.buzzed = [];\n                }\n\n                this.notify(lobbyId, 'buzzer-reset', {\n                  buzzer: this.games[lobbyId].buzzer,\n                  description: msg.target > 0 ? \"\".concat(msg.target, \"'s buzzer was reset\") : \"All buzzers were reset\"\n                });\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function onBuzzerReset(_x16, _x17) {\n        return _onBuzzerReset.apply(this, arguments);\n      }\n\n      return onBuzzerReset;\n    }()\n  }, {\n    key: \"onCorrect\",\n    value: function () {\n      var _onCorrect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(client, msg) {\n        var lobbyId;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n\n                if (!(msg.uuid !== this.games[lobbyId].host.uuid)) {\n                  _context10.next = 3;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", client.emit('error', {\n                  code: 401,\n                  description: 'You are not the host. Can not send correct ping'\n                }));\n\n              case 3:\n                this.notify(lobbyId, 'correct', {\n                  description: 'The answer was correct'\n                });\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function onCorrect(_x18, _x19) {\n        return _onCorrect.apply(this, arguments);\n      }\n\n      return onCorrect;\n    }()\n  }, {\n    key: \"onIncorrect\",\n    value: function () {\n      var _onIncorrect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(client, msg) {\n        var lobbyId;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n\n                if (!(msg.uuid !== this.games[lobbyId].host.uuid)) {\n                  _context11.next = 3;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\", client.emit('error', {\n                  code: 401,\n                  description: 'You are not the host. Can not send incorrect ping'\n                }));\n\n              case 3:\n                this.notify(lobbyId, 'incorrect', {\n                  description: 'The answer was incorrect'\n                });\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function onIncorrect(_x20, _x21) {\n        return _onIncorrect.apply(this, arguments);\n      }\n\n      return onIncorrect;\n    }()\n  }, {\n    key: \"onScoreChange\",\n    value: function () {\n      var _onScoreChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(client, msg) {\n        var lobbyId, playerIndex;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n\n                if (!(msg.uuid !== this.games[lobbyId].host.uuid)) {\n                  _context12.next = 3;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\", client.emit('error', {\n                  code: 401,\n                  description: 'You are not the host. Can not update scores'\n                }));\n\n              case 3:\n                playerIndex = this.games[lobbyId].players.findIndex(function (player) {\n                  if (player.username === msg.target) return;\n                });\n                this.games[lobbyId].players[playerIndex].score = msg.score;\n                this.notify(lobbyId, 'score-change', {\n                  players: this.getPlayers(lobbyId),\n                  description: 'A players score was updated'\n                });\n\n              case 6:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function onScoreChange(_x22, _x23) {\n        return _onScoreChange.apply(this, arguments);\n      }\n\n      return onScoreChange;\n    }()\n  }, {\n    key: \"onAvatarChange\",\n    value: function () {\n      var _onAvatarChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(client, msg) {\n        var lobbyId, playerIndex;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n                playerIndex = this.games[lobbyId].players.findindex(function (player) {\n                  return player.uuid === msg.uuid;\n                });\n                this.games[lobbyId].players[playerIndex].avatar = msg.avatar;\n                this.notify(lobbyId, 'avatar-change', {\n                  players: this.getPlayers(lobbyId),\n                  description: \"\".concat(this.getUsername(msg.uuid), \" updated their avatar\")\n                });\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function onAvatarChange(_x24, _x25) {\n        return _onAvatarChange.apply(this, arguments);\n      }\n\n      return onAvatarChange;\n    }()\n  }, {\n    key: \"onNameChange\",\n    value: function () {\n      var _onNameChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(client, msg) {\n        var lobbyId, playerIndex;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                lobbyId = msg.lobbyId;\n                playerIndex = this.games[lobbyId].players.findindex(function (player) {\n                  return player.uuid === msg.uuid;\n                });\n                this.games[lobbyId].players[playerIndex].username = msg.username;\n                this.notify(lobbyId, 'name-change', {\n                  players: this.getPlayers(lobbyId),\n                  description: \"\".concat(this.getUsername(msg.uuid), \" updated their name\")\n                });\n\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function onNameChange(_x26, _x27) {\n        return _onNameChange.apply(this, arguments);\n      }\n\n      return onNameChange;\n    }()\n    /*\n     *  Types of updates\n     *  - Scene Change\n     *  - Question Revealed\n     *  - Buzzer\n     *  - Buzzer Unlock\n     *  - Score Update\n     *  - player join\n     *  - player leave\n     *  - avatar Change\n     *  - name change\n     * \n    */\n\n  }, {\n    key: \"onUpdate\",\n    value: function () {\n      var _onUpdate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(client, msg) {\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      function onUpdate(_x28, _x29) {\n        return _onUpdate.apply(this, arguments);\n      }\n\n      return onUpdate;\n    }()\n  }, {\n    key: \"sendUpdate\",\n    value: function () {\n      var _sendUpdate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(client, msg) {\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      function sendUpdate(_x30, _x31) {\n        return _sendUpdate.apply(this, arguments);\n      }\n\n      return sendUpdate;\n    }()\n    /*\n     *  everytime a question is revealed, just store the id in the array\n     *  send the question information with each reveal, just do not save it here\n     * \n    */\n\n  }, {\n    key: \"createGame\",\n    value: function () {\n      var _createGame = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(client, msg) {\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                this.games[msg.lobbyId] = {\n                  players: [],\n                  board: {\n                    id: msg.boardId,\n                    revealed: [],\n                    \"in\": ''\n                  },\n                  host: {\n                    client: client,\n                    connected: true,\n                    uuid: msg.uuid\n                  }\n                };\n\n              case 1:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function createGame(_x32, _x33) {\n        return _createGame.apply(this, arguments);\n      }\n\n      return createGame;\n    }()\n  }, {\n    key: \"getQuestions\",\n    value: function () {\n      var _getQuestions = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(client, msg) {\n        var questions, sorted;\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return Question.find({\n                  boardId: msg.boardId\n                });\n\n              case 2:\n                questions = _context18.sent;\n                sorted = {};\n                questions.forEach(function (question) {\n                  if (!sorted[question.topic]) sorted[question.topic] = [];\n                  sorted[question.topic].push({\n                    id: question.id,\n                    price: question.price\n                  });\n                  sorted[question.topic].sort(a, function (b) {\n                    return a.price - b.price;\n                  });\n                });\n                return _context18.abrupt(\"return\", sorted);\n\n              case 6:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      function getQuestions(_x34, _x35) {\n        return _getQuestions.apply(this, arguments);\n      }\n\n      return getQuestions;\n    }()\n  }, {\n    key: \"getPlayers\",\n    value: function () {\n      var _getPlayers = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(lobbyId) {\n        var players, _iterator, _step, player;\n\n        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                players = [];\n                _iterator = _createForOfIteratorHelper(this.games[lobbyId].player);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    player = _step.value;\n                    players.push({\n                      username: player.username,\n                      score: player.score,\n                      avatar: player.avatar\n                    });\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                return _context19.abrupt(\"return\", players);\n\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function getPlayers(_x36) {\n        return _getPlayers.apply(this, arguments);\n      }\n\n      return getPlayers;\n    }()\n  }, {\n    key: \"getState\",\n    value: function () {\n      var _getState = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(lobbyId) {\n        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                return _context20.abrupt(\"return\", state = {\n                  players: this.getPlayers(lobbyId),\n                  board: this.games[lobbyId].board.questions\n                });\n\n              case 1:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function getState(_x37) {\n        return _getState.apply(this, arguments);\n      }\n\n      return getState;\n    }()\n  }, {\n    key: \"getQuestion\",\n    value: function () {\n      var _getQuestion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(quesitonId) {\n        var question;\n        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return Question.findById(question);\n\n              case 2:\n                question = _context21.sent;\n                return _context21.abrupt(\"return\", question.format());\n\n              case 4:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21);\n      }));\n\n      function getQuestion(_x38) {\n        return _getQuestion.apply(this, arguments);\n      }\n\n      return getQuestion;\n    }()\n  }, {\n    key: \"getUsername\",\n    value: function () {\n      var _getUsername = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(lobbyId, uuid) {\n        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                return _context22.abrupt(\"return\", this.games[lobbyId].players.find(function (player) {\n                  if (player.uuid === uuid) return player.username;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function getUsername(_x39, _x40) {\n        return _getUsername.apply(this, arguments);\n      }\n\n      return getUsername;\n    }()\n  }, {\n    key: \"getUUID\",\n    value: function () {\n      var _getUUID = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(lobbyId, username) {\n        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                return _context23.abrupt(\"return\", this.games[lobbyId].players.find(function (player) {\n                  if (player.username === username) return player.uuid;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function getUUID(_x41, _x42) {\n        return _getUUID.apply(this, arguments);\n      }\n\n      return getUUID;\n    }()\n    /**\n     * Notify any Websocket connections that are subscribed to\n     * the given id that an event has occurred.\n     * @param lobbyId The ID of the game\n     * @param event The event that was triggered\n     * @param msg The Invoice data\n     */\n\n  }, {\n    key: \"notify\",\n    value: function () {\n      var _notify = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(lobbyId, event, msg) {\n        var payload, _iterator2, _step2, player;\n\n        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                try {\n                  if (this.games[lobbyId].players) {\n                    // Compile payload\n                    payload = Object.assign({\n                      event: event\n                    }, msg);\n                    _iterator2 = _createForOfIteratorHelper(this.games[lobbyId].players);\n\n                    try {\n                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                        player = _step2.value;\n                        player.client.emit(event, payload);\n                      }\n                    } catch (err) {\n                      _iterator2.e(err);\n                    } finally {\n                      _iterator2.f();\n                    }\n                  }\n                } catch (err) {\n                  console.log(err);\n                }\n\n              case 1:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function notify(_x43, _x44, _x45) {\n        return _notify.apply(this, arguments);\n      }\n\n      return notify;\n    }()\n    /**\n     * Triggered when a Websocket client connects\n     * @param ws The Websocket of the client\n     * @private\n     */\n\n  }, {\n    key: \"_onConnection\",\n    value: function () {\n      var _onConnection2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(client) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                console.log('Connection'); // Setup event listeners\n\n                client.on('create', function (msg) {\n                  return Jeopardy.onCreate(client, msg);\n                });\n                client.on('join', function (msg) {\n                  return Jeopardy.onJoin(client, msg);\n                });\n                client.on('subscribe', function (msg) {\n                  return _this2._onSubscribe(client, msg);\n                });\n                client.on('unsubscribe', function (msg) {\n                  return _this2._onUnsubscribe(client, msg);\n                });\n                client.on('stateChange', function (msg) {\n                  return _this2._onStateChange(client, msg);\n                });\n\n              case 6:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      function _onConnection(_x46) {\n        return _onConnection2.apply(this, arguments);\n      }\n\n      return _onConnection;\n    }()\n  }]);\n\n  return WebSocket;\n}();\n\nvar webSocket = new WebSocket();\nmodule.exports = webSocket;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "websocket.js"
      ],
      "names": [
        "config",
        "require",
        "SocketIO",
        "Mongoose",
        "emit",
        "Jeopardy",
        "WebSocket",
        "games",
        "players",
        "questions",
        "buzzer",
        "unlocked",
        "buzzed",
        "uuid",
        "server",
        "socket",
        "cors",
        "origin",
        "methods",
        "on",
        "client",
        "_onConnection",
        "msg",
        "lobbyId",
        "createGame",
        "getQuestions",
        "board",
        "revealed",
        "host",
        "connected",
        "notify",
        "description",
        "playerIndex",
        "findIndex",
        "player",
        "push",
        "username",
        "score",
        "avatar",
        "getPlayers",
        "code",
        "setTimeout",
        "getUsername",
        "questionId",
        "quesitonId",
        "question",
        "getQuestion",
        "type",
        "content",
        "id",
        "quesiton",
        "price",
        "answer",
        "target",
        "filter",
        "findindex",
        "boardId",
        "Question",
        "find",
        "sorted",
        "forEach",
        "topic",
        "sort",
        "a",
        "b",
        "state",
        "findById",
        "format",
        "event",
        "payload",
        "Object",
        "assign",
        "err",
        "console",
        "log",
        "onCreate",
        "onJoin",
        "_onSubscribe",
        "_onUnsubscribe",
        "_onStateChange",
        "webSocket",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/services/",
      "sourcesContent": [
        "'use strict'\n\nconst config = require('../config')\n\nconst SocketIO = require('socket.io')\nconst { Mongoose } = require('mongoose')\nconst { emit } = require('nodemon')\n\nconst Jeopardy = require('./JeopardySockets')\n\n/*\n * The host will generate a join code for the game which will be saved to the subscriptions array\n * The host will be identified as being index 0 in the array\n * \n * If the code the client has submitted does not exist, its assumed they are starting a new lobby\n * When a client disconnects, it will check if they are index 0 client; if true, the lobby will be destroyed\n * \n * TODO:\n * work out how to attach username to client along with score\n *  - Create a cookie on the client that will lock the username to that player and maybe a uuid. Use this to determine if the player is rejoining or a new player\n * \n * msg requirements: \n *  - User uuid - This will not be given to any other players\n *  - lobby id\n *  - \n*/\n\n\n/**\n * WebSocket Library for Notifying Clients of Payment Events\n * @memberof Services\n */\nclass WebSocket {\n  constructor () {\n    this.games = {\n      0: {\n        players: [],\n        questions: {\n          '0': null\n        },\n        buzzer: {\n          unlocked: false,\n          buzzed: [\n            { uuid: '' }\n          ]\n        }\n      }\n    }\n  }\n\n  /**\n   * Setup the Websocket server\n   */\n  async startServer (server) {\n    // Setup Websockets\n    const socket = SocketIO(server, {\n      cors: {\n        origin: \"*\",\n        methods: ['GET', 'POST']\n      }\n    })\n\n    socket.on('connection', (client) => this._onConnection(client))\n  }\n\n  async onJoin (client, msg) {\n    // If the game doesnt exist, create it, set the user to the host\n    if (!this.games[msg.lobbyId]) {\n      this.createGame(client, msg)\n      return client.emit('created', {\n        questions: this.getQuestions(msg.lobbyId),\n        buzzer: this.games[lobbyId].buzzer,\n        board: {\n          revealed: this.games[lobbyId].revealed,\n          in: this.games[lobbyId].board.in\n        }\n      })\n    }\n\n    // Check if its the host rejoining\n    if (msg.uuid === this.games[msg.lobbyId].host.uuid) {\n      this.games[msg.lobbyId].host.client = client\n      this.games[msg.lobbyId].host.connected = true\n      return this.notify('host-join', {\n        description: 'The host has rejoined the lobby'\n      })\n    }\n\n    // Add the player to the lobby if they werent already\n    const playerIndex = this.games[msg.lobbyId].players.findIndex(player => msg.uuid === player.uuid)\n    if (!playerIndex) {\n      this.games[msg.lobbyId].players.push({\n        client: client,\n        uuid: msg.uuid,\n        username: msg.username,\n        score: 0,\n        avatar: msg.avatar,\n        connected: true\n      })\n     } else {\n      this.games[msg.lobbyId].players[playerIndex].client = client\n      this.games[msg.lobbyId].players[playerIndex].connected = true\n    }\n\n    // Send the new player the board and questions\n    client.emit('board', {\n      questions: this.getQuestions(msg.lobbyId),\n      buzzer: this.games[lobbyId].buzzer,\n      board: {\n        revealed: this.games[lobbyId].revealed,\n        in: this.games[lobbyId].board.in\n      }\n    })\n\n    // Notify other players\n    return this.notify(msg.lobbyId, 'player-joined', {\n      players: this.getPlayers(),\n      description: `${msg.username} has joined the lobby`\n    })\n  }\n\n  async onLeave (client, msg) {\n    if (!this.games[msg.lobbyId]) {\n      return client.emit('error', {\n        code: 204,\n        description: 'Game does not exist'\n      })\n    }\n\n    if (msg.uuid === this.games[msg.lobbyId].host.uuid) {\n      this.games[msg.lobbyId].host.connected = false\n      this.notify(msg.lobbyId, 'host-leave', {\n        description: 'The host has left the lobby. Lobby will be destroyed in 5 minutes if they do not reconnect'\n      })\n      setTimeout(function () {\n        if (this.games[msg.lobbyId].host.connected) return\n        delete this.games[msg.lobbyId]\n        this.notify(msg.lobbyId, 'lobby-destroyed', {\n          description: 'The host did not reconnect to the lobby'\n        })\n      }, 5 * 60 * 1000)\n    } else {\n      // For normal players\n      const playerIndex = this.games[msg.lobbyId].players.findIndex(player => msg.uuid === player.uuid)\n      if (!playerIndex) return\n      this.games[msg.lobbyId].players[playerIndex].connected = false\n      this.notify(msg.lobbyId, 'player-leave', {\n        players: this.getPlayers(msg.lobbyId),\n        description: `${this.getUsername(msg.uuid)} has left the game`\n      })\n    }\n  }\n\n  // Called when the host tries to reveal the question to the players\n  async onRevealQuestion (client, msg) {\n    const lobbyId = msg.lobbyId\n    const questionId = msg.quesitonId\n    if (msg.uuid !== this.games[lobbyId].host.uuid) {\n      return client.emit('error', {\n        code: 401,\n        description: 'You are not the host. Card can not be revealed'\n      })\n    }\n    this.games[lobbyId].board.in = questionId\n    const question = this.getQuestion(questionId)\n    this.notify(lobbyId, 'reveal', {\n      type: 'question',\n      question: {\n        content: question.content,\n        id: quesiton.id,\n        price: question.price\n      },\n      in: questionId\n    })\n  }\n\n  // Called when the host tries to reveal the answer to the players\n  async onRevealAnswer (client, msg) {\n    const lobbyId = msg.lobbyId\n    const questionId = msg.quesitonId\n    if (msg.uuid !== this.games[lobbyId].host.uuid) {\n      return client.emit('error', {\n        code: 401,\n        description: 'You are not the host. Card can not be revealed'\n      })\n    }\n    this.games[lobbyId].board.in = ''\n    this.games[lobbyId].board.revealed.push(questionId)\n    this.notify(lobbyId, 'reveal', {\n      type: 'answer',\n      question: {\n        content: question.content,\n        id: quesiton.id,\n        price: question.price,\n        answer: question.answer\n      },\n      in: '',\n      revealed: this.games[lobbyId].board.revealed\n    })\n  }\n\n  // Called when a player attempts to buzz in\n  async onBuzz (client, msg) {\n    const lobbyId = msg.lobbyId\n    if (!this.games[lobbyId].buzzer.unlocked) {\n      return client.emit('error', {\n        code: 401,\n        description: 'The buzzer has not been unlocked yet'\n      })\n    }\n    this.games[lobbyId].buzzer.buzzed.push(this.getUsername(msg.uuid))\n    this.notify(lobbyId, 'buzzed', {\n      player: this.getUsername(lobbyId, msg.uuid),\n      buzzer: this.games[lobbyId].buzzer\n    })\n  }\n\n  // Called when the host unlocks the players' ability to buzz in\n  async onBuzzerUnlock (client, msg) {\n    const lobbyId = msg.lobbyId\n    if (msg.uuid !== this.games[lobbyId].host.uuid) {\n      return client.emit('error', {\n        code: 401,\n        description: 'You are not the host. Buzzer can not be unlocked'\n      })\n    }\n    this.games[lobbyId].buzzer.unlocked = true\n    this.notify(lobbyId, 'buzzer-unlocked', {\n      buzzer: this.games[lobbyId].buzzer,\n      description: 'The buzzer has been unlocked'\n    })\n  }\n\n  async onBuzzerLock (client, msg) {\n    const lobbyId = msg.lobbyId\n    if (msg.uuid !== this.games[lobbyId].host.uuid) {\n      return client.emit('error', {\n        code: 401,\n        description: 'You are not the host. Buzzer can not be locked'\n      })\n    }\n    this.games[lobbyId].buzzer.unlocked = false\n    this.notify(lobbyId, 'buzzer-locked', {\n      buzzer: this.games[lobbyId].buzzer,\n      description: 'The buzzer has been locked'\n    })\n  }\n\n  async onBuzzerReset (client, msg) {\n    const lobbyId = msg.lobbyId\n    if (msg.uuid !== this.games[lobbyId].host.uuid) {\n      return client.emit('error', {\n        code: 401,\n        description: 'You are not the host. Buzzer can not be reset'\n      })\n    }\n    // Either remove a single user or all users from buzzed\n    if (msg.target > 0) {\n      this.games[lobbyId].buzzer.buzzed = this.games[lobbyId].buzzer.buzzed.filter(username => username !== msg.target)\n    } else {\n      this.games[lobbyId].buzzer.buzzed = []\n    }\n    this.notify(lobbyId, 'buzzer-reset', {\n      buzzer: this.games[lobbyId].buzzer,\n      description: msg.target > 0 ? `${msg.target}'s buzzer was reset` : `All buzzers were reset`\n    })\n  }\n\n  async onCorrect (client, msg) {\n    const lobbyId = msg.lobbyId\n    if (msg.uuid !== this.games[lobbyId].host.uuid) {\n      return client.emit('error', {\n        code: 401,\n        description: 'You are not the host. Can not send correct ping'\n      })\n    }\n    this.notify(lobbyId, 'correct', {\n      description: 'The answer was correct'\n    })\n  }\n\n  async onIncorrect (client, msg) {\n    const lobbyId = msg.lobbyId\n    if (msg.uuid !== this.games[lobbyId].host.uuid) {\n      return client.emit('error', {\n        code: 401,\n        description: 'You are not the host. Can not send incorrect ping'\n      })\n    }\n    this.notify(lobbyId, 'incorrect', {\n      description: 'The answer was incorrect'\n    })\n  }\n\n  async onScoreChange(client, msg) {\n    const lobbyId = msg.lobbyId\n    if (msg.uuid !== this.games[lobbyId].host.uuid) {\n      return client.emit('error', {\n        code: 401,\n        description: 'You are not the host. Can not update scores'\n      })\n    }\n    const playerIndex = this.games[lobbyId].players.findIndex(player => {\n      if (player.username === msg.target) return \n    })\n    this.games[lobbyId].players[playerIndex].score = msg.score\n    this.notify(lobbyId, 'score-change', {\n      players: this.getPlayers(lobbyId),\n      description: 'A players score was updated'\n    })\n  }\n\n  async onAvatarChange (client, msg) {\n    const lobbyId = msg.lobbyId\n    const playerIndex = this.games[lobbyId].players.findindex(player => player.uuid === msg.uuid)\n    this.games[lobbyId].players[playerIndex].avatar = msg.avatar\n    this.notify(lobbyId, 'avatar-change', {\n      players: this.getPlayers(lobbyId),\n      description: `${this.getUsername(msg.uuid)} updated their avatar`\n    })\n  }\n\n  async onNameChange (client, msg) {\n    const lobbyId = msg.lobbyId\n    const playerIndex = this.games[lobbyId].players.findindex(player => player.uuid === msg.uuid)\n    this.games[lobbyId].players[playerIndex].username = msg.username\n    this.notify(lobbyId, 'name-change', {\n      players: this.getPlayers(lobbyId),\n      description: `${this.getUsername(msg.uuid)} updated their name`\n    })\n  }\n\n  /*\n   *  Types of updates\n   *  - Scene Change\n   *  - Question Revealed\n   *  - Buzzer\n   *  - Buzzer Unlock\n   *  - Score Update\n   *  - player join\n   *  - player leave\n   *  - avatar Change\n   *  - name change\n   * \n  */\n  async onUpdate (client, msg) {\n\n  }\n\n  async sendUpdate (client, msg) {\n\n  }\n\n  /*\n   *  everytime a question is revealed, just store the id in the array\n   *  send the question information with each reveal, just do not save it here\n   * \n  */\n  async createGame (client, msg) {\n    this.games[msg.lobbyId] = {\n      players: [],\n      board: {\n        id: msg.boardId,\n        revealed: [], \n        in: ''\n      },\n      host: {\n        client: client,\n        connected: true,\n        uuid: msg.uuid\n      }\n    }\n  }\n\n  async getQuestions (client, msg) {\n    let questions = await Question.find({ boardId: msg.boardId })\n\n    const sorted = {}\n    questions.forEach(question => {\n      if (!sorted[question.topic]) sorted[question.topic] = []\n      sorted[question.topic].push({\n        id: question.id,\n        price: question.price,\n      })\n      sorted[question.topic].sort(a, b => {\n        return a.price - b.price\n      })\n    })\n    return sorted\n  }\n\n  async getPlayers (lobbyId) {\n    const players = []\n    for (const player of this.games[lobbyId].player) {\n      players.push({\n        username: player.username,\n        score: player.score,\n        avatar: player.avatar\n      })\n    }\n    return players\n  }\n\n  async getState (lobbyId) {\n    return state = {\n      players: this.getPlayers(lobbyId),\n      board: this.games[lobbyId].board.questions\n    }\n  }\n\n  async getQuestion (quesitonId) {\n    let question = await Question.findById(question)\n    return question.format()\n  }\n\n  async getUsername (lobbyId, uuid) {\n    return this.games[lobbyId].players.find(player => {\n      if (player.uuid === uuid) return player.username\n    })\n  }\n\n  async getUUID (lobbyId, username) {\n    return this.games[lobbyId].players.find(player => {\n      if (player.username === username) return player.uuid\n    })\n  }\n\n  /**\n   * Notify any Websocket connections that are subscribed to\n   * the given id that an event has occurred.\n   * @param lobbyId The ID of the game\n   * @param event The event that was triggered\n   * @param msg The Invoice data\n   */\n  async notify (lobbyId, event, msg) {\n    try {\n      if (this.games[lobbyId].players) {\n        // Compile payload\n        var payload = Object.assign({ event: event }, msg)\n\n        for (const player of this.games[lobbyId].players) {\n          player.client.emit(event, payload)\n        }\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  /**\n   * Triggered when a Websocket client connects\n   * @param ws The Websocket of the client\n   * @private\n   */\n  async _onConnection (client) {\n    console.log('Connection')\n    // Setup event listeners\n    client.on('create', (msg) => Jeopardy.onCreate(client, msg))\n    client.on('join', (msg) => Jeopardy.onJoin(client, msg))\n    client.on('subscribe', (msg) => this._onSubscribe(client, msg))\n    client.on('unsubscribe', (msg) => this._onUnsubscribe(client, msg))\n    client.on('stateChange', (msg) => this._onStateChange(client, msg))\n  }\n\n}\n\nconst webSocket = new WebSocket()\n\nmodule.exports = webSocket\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1614232732075
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/services/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/services/JeopardySockets.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/services/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/services/JeopardySockets.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/services/JeopardySockets.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/services/JeopardySockets.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/services/",
        "sourceFileName": "JeopardySockets.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Jeopardy = /*#__PURE__*/function () {\n  function Jeopardy() {\n    _classCallCheck(this, Jeopardy);\n\n    this.lobbies = {\n      randomId: {\n        clients: {},\n        // uuid = key\n        board: {\n          id: '',\n          // Id of the board\n          questions: [] // Array of completed question IDs\n\n        },\n        buzzer: {\n          buzzed: [],\n          // Array of UUIDs of the players that have buzzed in. array maintains order\n          unlocked: false // Define the state of the buzzer\n\n        },\n        state: {\n          question: {} // If question isnt empty, assume currently in a question and send to players on join. Requires updating every question\n\n        }\n      }\n    };\n  }\n  /*\n    *  onJoin - handles 'join-game' event\n    *  Checks if the lobby already exists\n    *  Checks if the user is the host or previously connected\n    *  Creates the user in the saved object\n    *  Notifies other players of new player\n  */\n\n\n  _createClass(Jeopardy, [{\n    key: \"onJoin\",\n    value: function () {\n      var _onJoin = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(client, msg) {\n        var lobby, uuid;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(msg);\n                lobby = msg.lobbyId;\n                uuid = msg.uuid; // Make sure the game exists\n\n                if (this.exists(lobby)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", client.emit('error', {\n                  description: 'That lobby does not exist'\n                }));\n\n              case 5:\n                if (!this.isHost(lobby, uuid)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                // Assume host is either joining for first time or rejoining\n                this.setClient(lobby, uuid, client);\n                this.setConnected(lobby, uuid, true);\n                client.emit('connected', this.game.getState(lobby));\n                return _context.abrupt(\"return\", this.notify('host-join', {\n                  description: \"The host (\".concat(this.clients.getUsername(lobby, uuid), \") has joined the lobby\")\n                }));\n\n              case 10:\n                if (!this.isClient(lobby, uuid)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                this.setClient(lobby, uuid, client);\n                this.setConnected(lobby, uuid, true);\n                this.updateClientInfo(lobby, uuid, {\n                  avatar: msg.avatar,\n                  username: msg.username\n                });\n                this.notify('player-join', {\n                  description: \"\".concat(this.getUsername(lobby, uuid), \" has reconnected\"),\n                  player: this.getUsername(lobby, uuid)\n                });\n                return _context.abrupt(\"return\", client.emit('connected', this.game.getState(lobby)));\n\n              case 16:\n                // Handle connection of the new player\n                this.add(lobby, client, msg);\n                client.emit('connected', this.game.getState(lobby));\n                this.notify('player-join', {\n                  description: \"\".concat(this.clients.getUsername(lobby, uuid), \" has joined the lobby\"),\n                  player: this.clients.getUsername(lobby, uuid)\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onJoin(_x, _x2) {\n        return _onJoin.apply(this, arguments);\n      }\n\n      return onJoin;\n    }()\n  }, {\n    key: \"onLeave\",\n    value: function () {\n      var _onLeave = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(client, msg) {\n        var lobby, uuid;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                lobby = msg.lobbyId;\n                uuid = msg.uuid; // Make sure game exists\n\n                if (this.exists(lobby)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", client.emit('error', {\n                  descrition: 'That lobby does not exist'\n                }));\n\n              case 4:\n                if (!this.isHost(lobby, uuid)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                this.setConnected(lobby, uuid, false);\n                client.emit('disconnected');\n                this.notify('host-leave', {\n                  description: \"The host (\".concat(this.clients.getUsername(lobby, uuid), \") has disconnected\")\n                }); // Start game destroy countdown\n\n                return _context2.abrupt(\"return\", this.game.destroy(lobby, uuid, 600));\n\n              case 9:\n                // Disconnect the user and notify players\n                this.setConnected(lobby, uuid, false);\n                this.emit('disconnected', {\n                  description: 'You have been disconnected from the lobby'\n                });\n                this.notify('player-leave', {\n                  description: \"\".concat(this.clients.getUsername(lobby, uuid), \" has left the lobby\"),\n                  player: this.clients.getUsername(lobby, uuid)\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onLeave(_x3, _x4) {\n        return _onLeave.apply(this, arguments);\n      }\n\n      return onLeave;\n    }()\n  }, {\n    key: \"onCreate\",\n    value: function () {\n      var _onCreate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(client, msg) {\n        var lobby, uuid;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                lobby = msg.lobbyId;\n                uuid = msg.uuid; // Check if game already exists\n\n                if (!this.exists(lobby)) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", client.emit('error', {\n                  description: 'That lobby already exists'\n                }));\n\n              case 4:\n                // Create game and return success to the client\n                this.createGame(client, msg);\n                return _context3.abrupt(\"return\", client.emit('created', {\n                  description: 'Game successfully created'\n                }));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onCreate(_x5, _x6) {\n        return _onCreate.apply(this, arguments);\n      }\n\n      return onCreate;\n    }()\n  }, {\n    key: \"onQuestionReveal\",\n    value: function () {\n      var _onQuestionReveal = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(client, msg) {\n        var lobby, uuid, question, q;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                lobby = msg.lobbyId;\n                uuid = msg.uuid;\n                question = msg.questionId; // Ensure game exists\n\n                if (this.exists(lobby)) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", client.emit('error', {\n                  description: 'That lobby does not exist'\n                }));\n\n              case 5:\n                if (this.isHost(lobby, uuid)) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", client.emit('error', {\n                  description: 'Only the host can reveal a question'\n                }));\n\n              case 7:\n                _context4.next = 9;\n                return this.getQuestion(question);\n\n              case 9:\n                q = _context4.sent;\n                this.setState(lobby, {\n                  question: q\n                });\n                this.lobbies[lobby].board.questions.push(question);\n                this.notify('reveal-question', {\n                  description: \"Question Revealed\",\n                  question: q\n                });\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onQuestionReveal(_x7, _x8) {\n        return _onQuestionReveal.apply(this, arguments);\n      }\n\n      return onQuestionReveal;\n    }()\n  }, {\n    key: \"onAnswerReveal\",\n    value: function () {\n      var _onAnswerReveal = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(client, msg) {\n        var lobby, uuid, question, q;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                lobby = msg.lobbyId;\n                uuid = msg.uuid;\n                question = msg.questionId; // Ensure game exists\n\n                if (this.exists(lobby)) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", client.emit('error', {\n                  description: 'That lobby does not exist'\n                }));\n\n              case 5:\n                if (this.isHost(lobby, uuid)) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", client.emit('error', {\n                  description: 'Only the host can reveal an answer'\n                }));\n\n              case 7:\n                _context5.next = 9;\n                return this.cards.getAnswer(question);\n\n              case 9:\n                q = _context5.sent;\n                this.setState(lobby, {\n                  question: q\n                });\n                this.lobbies[lobby].board.questions.push(question);\n                this.notify('reveal-question', {\n                  description: \"Answer Revealed\",\n                  question: q\n                });\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function onAnswerReveal(_x9, _x10) {\n        return _onAnswerReveal.apply(this, arguments);\n      }\n\n      return onAnswerReveal;\n    }() // Templating function to create a new game\n\n  }, {\n    key: \"createGame\",\n    value: function createGame(client, msg) {\n      this.lobbies[msg.lobbyId] = {\n        clients: {},\n        board: {\n          id: msg.boardId,\n          questions: []\n        },\n        buzzer: {\n          buzzed: [],\n          unlocked: false\n        },\n        state: {\n          question: {}\n        }\n      };\n      this.lobbies[msg.lobbyId].clients[msg.uuid] = {\n        avatar: msg.avatar,\n        client: client,\n        connected: false,\n        isHost: true,\n        username: msg.username\n      };\n    }\n    /*\n     *  Client Functions\n     *\n     * \n    */\n\n  }, {\n    key: \"add\",\n    value: function add(lobby, client, info) {\n      this.lobbies[lobby].clients[info.uuid] = {\n        avatar: info.avatar,\n        client: client,\n        connected: true,\n        isHost: false,\n        score: 0,\n        username: info.username\n      };\n    }\n  }, {\n    key: \"getUsername\",\n    value: function getUsername(lobby, uuid) {\n      return this.lobbies[lobby].clients[uuid].username;\n    }\n  }, {\n    key: \"getUUID\",\n    value: function getUUID(lobby, username) {\n      for (var _i = 0, _Object$keys = Object.keys(this.lobbies[lobby].clients); _i < _Object$keys.length; _i++) {\n        var uuid = _Object$keys[_i];\n        if (this.lobbies[lobby].clients[uuid].username === username) return uuid;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"isClient\",\n    value: function isClient(lobby, uuid) {\n      return this.lobbies[lobby].clients[uuid] ? true : false;\n    }\n  }, {\n    key: \"isHost\",\n    value: function isHost(lobby, uuid) {\n      return this.lobbies[lobby].clients[uuid].isHost;\n    }\n  }, {\n    key: \"setClient\",\n    value: function setClient(lobby, uuid, client) {\n      this.lobbies[lobby].clients[uuid].client = client;\n    }\n  }, {\n    key: \"setConnected\",\n    value: function setConnected(lobby, uuid, state) {\n      this.lobbies[lobby].clients[uuid].connected = state;\n    }\n  }, {\n    key: \"updateClientInfo\",\n    value: function updateClientInfo(lobby, uuid, info) {\n      if (!info.avatar !== '') this.lobbies[lobby].clients[uuid].avatar = info.avatar;\n      if (!info.username !== '') this.lobbies[lobby].clients[uuid].username = info.username;\n    }\n    /*\n     *  Game Functions\n     *\n     * \n    */\n\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _destroy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(lobby, hostId, time) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", setTimeout(function () {\n                  if (_this.lobbies[lobby].clients[hostId].connected) {\n                    _this.notify('game-destroyed', {\n                      description: \"The host (\".concat(_this.clients.getUsername(lobby, hostId), \") failed to rejoin. The game was destroyed\")\n                    });\n\n                    delete _this.lobbies[lobby];\n                  }\n                }, time * 1000));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function destroy(_x11, _x12, _x13) {\n        return _destroy.apply(this, arguments);\n      }\n\n      return destroy;\n    }()\n  }, {\n    key: \"exists\",\n    value: function exists(lobby) {\n      return this.lobbies[lobby] ? true : false;\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(lobby) {\n      var host, players;\n\n      var _iterator = _createForOfIteratorHelper(this.lobbies[lobby].clients),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var client = _step.value;\n          if (client.isHost) host = {\n            avatar: client.avatar,\n            connected: client.connected,\n            username: client.username\n          };else players.push({\n            avatar: client.avatar,\n            connected: client.connected,\n            score: client.score,\n            username: client.username\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return {\n        board: this.lobbies[lobby].board,\n        buzzer: this.lobbies[lobby].buzzer,\n        host: host,\n        players: players,\n        state: this.lobbies[lobby].state\n      };\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(lobby, state) {\n      this.lobbies[lobby].state = state;\n    }\n    /*\n     *  Card Functions\n     *\n     * \n    */\n\n  }, {\n    key: \"getAnswer\",\n    value: function () {\n      var _getAnswer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(questionId) {\n        var q;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Question.findById(questionId);\n\n              case 2:\n                q = _context7.sent;\n                return _context7.abrupt(\"return\", q.format());\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getAnswer(_x14) {\n        return _getAnswer.apply(this, arguments);\n      }\n\n      return getAnswer;\n    }()\n  }, {\n    key: \"getQuestion\",\n    value: function () {\n      var _getQuestion = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(questionId) {\n        var q;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return Question.findById(questionId);\n\n              case 2:\n                q = _context8.sent;\n                q = q.format();\n                return _context8.abrupt(\"return\", {\n                  content: q.content,\n                  id: q.id,\n                  price: q.price,\n                  topic: q.topic\n                });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function getQuestion(_x15) {\n        return _getQuestion.apply(this, arguments);\n      }\n\n      return getQuestion;\n    }()\n    /**\n     * Notify any Websocket connections that are subscribed to\n     * the given id that an event has occurred.\n     * @param lobbyId The ID of the game\n     * @param event The event that was triggered\n     * @param msg The Invoice data\n     */\n\n  }, {\n    key: \"notify\",\n    value: function () {\n      var _notify = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(lobbyId, event, msg) {\n        var payload, _iterator2, _step2, player;\n\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                try {\n                  if (this.lobbies[lobbyId].clients) {\n                    // Compile payload\n                    payload = Object.assign({\n                      event: event\n                    }, msg);\n                    _iterator2 = _createForOfIteratorHelper(this.lobbies[lobbyId].clients);\n\n                    try {\n                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                        player = _step2.value;\n                        player.client.emit(event, payload);\n                      }\n                    } catch (err) {\n                      _iterator2.e(err);\n                    } finally {\n                      _iterator2.f();\n                    }\n                  }\n                } catch (err) {\n                  console.log(err);\n                }\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function notify(_x16, _x17, _x18) {\n        return _notify.apply(this, arguments);\n      }\n\n      return notify;\n    }()\n  }]);\n\n  return Jeopardy;\n}();\n\nvar jeopardy = new Jeopardy();\nmodule.exports = jeopardy;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "JeopardySockets.js"
      ],
      "names": [
        "Jeopardy",
        "lobbies",
        "randomId",
        "clients",
        "board",
        "id",
        "questions",
        "buzzer",
        "buzzed",
        "unlocked",
        "state",
        "question",
        "client",
        "msg",
        "console",
        "log",
        "lobby",
        "lobbyId",
        "uuid",
        "exists",
        "emit",
        "description",
        "isHost",
        "setClient",
        "setConnected",
        "game",
        "getState",
        "notify",
        "getUsername",
        "isClient",
        "updateClientInfo",
        "avatar",
        "username",
        "player",
        "add",
        "descrition",
        "destroy",
        "createGame",
        "questionId",
        "getQuestion",
        "q",
        "setState",
        "push",
        "cards",
        "getAnswer",
        "boardId",
        "connected",
        "info",
        "score",
        "Object",
        "keys",
        "hostId",
        "time",
        "setTimeout",
        "host",
        "players",
        "Question",
        "findById",
        "format",
        "content",
        "price",
        "topic",
        "event",
        "payload",
        "assign",
        "err",
        "jeopardy",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/services/",
      "sourcesContent": [
        "class Jeopardy {\n  constructor () {\n    this.lobbies = {\n      randomId: {\n        clients: {}, // uuid = key\n        board: {\n          id: '', // Id of the board\n          questions: [] // Array of completed question IDs\n        },\n        buzzer: {\n          buzzed: [],  // Array of UUIDs of the players that have buzzed in. array maintains order\n          unlocked: false // Define the state of the buzzer\n        },\n        state: {\n          question: {} // If question isnt empty, assume currently in a question and send to players on join. Requires updating every question\n        }\n      }\n    }\n  }\n\n  /*\n    *  onJoin - handles 'join-game' event\n    *  Checks if the lobby already exists\n    *  Checks if the user is the host or previously connected\n    *  Creates the user in the saved object\n    *  Notifies other players of new player\n  */\n  async onJoin(client, msg) {\n    console.log(msg)\n    const lobby = msg.lobbyId\n    const uuid = msg.uuid\n    \n    // Make sure the game exists\n    if (!this.exists(lobby)) {\n      return client.emit('error', {\n        description: 'That lobby does not exist'\n      })\n    }\n\n    // Check if the player is the host\n    if (this.isHost(lobby, uuid)) {\n      // Assume host is either joining for first time or rejoining\n      this.setClient(lobby, uuid, client)\n      this.setConnected(lobby, uuid, true)\n      client.emit('connected', this.game.getState(lobby))\n      return this.notify('host-join', {\n        description: `The host (${this.clients.getUsername(lobby, uuid)}) has joined the lobby`\n      })\n    }\n\n    // Check if the player was previously connected\n    if (this.isClient(lobby, uuid)) {\n      this.setClient(lobby, uuid, client)\n      this.setConnected(lobby, uuid, true)\n      this.updateClientInfo(lobby, uuid, { avatar: msg.avatar, username: msg.username })\n      this.notify('player-join', {\n        description: `${this.getUsername(lobby, uuid)} has reconnected`,\n        player: this.getUsername(lobby, uuid)\n      })\n      return client.emit('connected', this.game.getState(lobby))\n    }\n\n    // Handle connection of the new player\n    this.add(lobby, client, msg)\n    client.emit('connected', this.game.getState(lobby))\n    this.notify('player-join', {\n      description: `${this.clients.getUsername(lobby, uuid)} has joined the lobby`,\n      player: this.clients.getUsername(lobby, uuid)\n    })\n  }\n\n  async onLeave(client, msg) {\n    const lobby = msg.lobbyId\n    const uuid = msg.uuid\n\n    // Make sure game exists\n    if (!this.exists(lobby)) {\n      return client.emit('error', {\n        descrition: 'That lobby does not exist'\n      })\n    }\n\n    // Check if the player is the host\n    if (this.isHost(lobby, uuid)) {\n      this.setConnected(lobby, uuid, false)\n      client.emit('disconnected')\n      this.notify('host-leave', {\n        description: `The host (${this.clients.getUsername(lobby, uuid)}) has disconnected`\n      })\n      // Start game destroy countdown\n      return this.game.destroy(lobby, uuid, 600)\n    }\n\n    // Disconnect the user and notify players\n    this.setConnected(lobby, uuid, false)\n    this.emit('disconnected', {\n      description: 'You have been disconnected from the lobby'\n    })\n    this.notify('player-leave', {\n      description: `${this.clients.getUsername(lobby, uuid)} has left the lobby`,\n      player: this.clients.getUsername(lobby, uuid)\n    })\n  }\n\n  async onCreate(client, msg) {\n    const lobby = msg.lobbyId\n    const uuid = msg.uuid\n\n    // Check if game already exists\n    if (this.exists(lobby)) {\n      return client.emit('error', {\n        description: 'That lobby already exists'\n      })\n    }\n\n    // Create game and return success to the client\n    this.createGame(client, msg)\n    return client.emit('created', {\n      description: 'Game successfully created'\n    })\n  }\n\n  async onQuestionReveal(client, msg) {\n    const lobby = msg.lobbyId\n    const uuid = msg.uuid\n    const question = msg.questionId\n\n    // Ensure game exists\n    if (!this.exists(lobby)) {\n      return client.emit('error', {\n        description: 'That lobby does not exist'\n      })\n    }\n\n    // Ensure they are the host\n    if (!this.isHost(lobby, uuid)) {\n      return client.emit('error', {\n        description: 'Only the host can reveal a question'\n      })\n    }\n\n    // Add the question id to the revealed questions\n    // send the question content to the clients\n    const q = await this.getQuestion(question)\n    this.setState(lobby, {\n      question: q\n    })\n    this.lobbies[lobby].board.questions.push(question)\n    this.notify('reveal-question', {\n      description: `Question Revealed`,\n      question: q\n    })\n\n  }\n\n  async onAnswerReveal(client, msg) {\n    const lobby = msg.lobbyId\n    const uuid = msg.uuid\n    const question = msg.questionId\n\n    // Ensure game exists\n    if (!this.exists(lobby)) {\n      return client.emit('error', {\n        description: 'That lobby does not exist'\n      })\n    }\n\n    // Ensure they are the host\n    if (!this.isHost(lobby, uuid)) {\n      return client.emit('error', {\n        description: 'Only the host can reveal an answer'\n      })\n    }\n\n    // Add the question id to the revealed questions\n    // send the question content to the clients\n    const q = await this.cards.getAnswer(question)\n    this.setState(lobby, {\n      question: q\n    })\n    this.lobbies[lobby].board.questions.push(question)\n    this.notify('reveal-question', {\n      description: `Answer Revealed`,\n      question: q\n    })\n\n  }\n\n  // Templating function to create a new game\n  createGame(client, msg) {\n    this.lobbies[msg.lobbyId] = {\n      clients: {},\n      board: {\n        id: msg.boardId,\n        questions: []\n      },\n      buzzer: {\n        buzzed: [],\n        unlocked: false\n      },\n      state: {\n        question: {}\n      }\n    }\n    this.lobbies[msg.lobbyId].clients[msg.uuid] = {\n      avatar: msg.avatar,\n      client: client,\n      connected: false,\n      isHost: true,\n      username: msg.username\n    }\n  }\n\n  /*\n   *  Client Functions\n   *\n   * \n  */\n  add (lobby, client, info) {\n    this.lobbies[lobby].clients[info.uuid] = {\n      avatar: info.avatar,\n      client: client,\n      connected: true,\n      isHost: false,\n      score: 0,\n      username: info.username\n    }\n  }\n  getUsername (lobby, uuid) {\n    return this.lobbies[lobby].clients[uuid].username\n  }\n  getUUID (lobby, username) {\n    for (const uuid of Object.keys(this.lobbies[lobby].clients)) {\n      if (this.lobbies[lobby].clients[uuid].username === username) return uuid\n    }\n    return null\n  }\n  isClient (lobby, uuid) {\n    return this.lobbies[lobby].clients[uuid] ? true : false\n  }\n  isHost (lobby, uuid) {\n    return this.lobbies[lobby].clients[uuid].isHost\n  }\n  setClient (lobby, uuid, client) {\n    this.lobbies[lobby].clients[uuid].client = client\n  }\n  setConnected (lobby, uuid, state) {\n    this.lobbies[lobby].clients[uuid].connected = state\n  }\n  updateClientInfo (lobby, uuid, info) {\n    if (!info.avatar !== '') this.lobbies[lobby].clients[uuid].avatar = info.avatar\n    if (!info.username !== '') this.lobbies[lobby].clients[uuid].username = info.username\n  }\n\n  /*\n   *  Game Functions\n   *\n   * \n  */\n  async destroy (lobby, hostId, time) {\n    return setTimeout(() => {\n      if (this.lobbies[lobby].clients[hostId].connected) {\n        this.notify('game-destroyed', {\n          description: `The host (${this.clients.getUsername(lobby, hostId)}) failed to rejoin. The game was destroyed`\n        })\n        delete this.lobbies[lobby]\n      }\n    }, time * 1000)\n  }\n  exists (lobby) {\n    return this.lobbies[lobby] ? true : false\n  }\n  getState (lobby) {\n    let host, players\n    for (const client of this.lobbies[lobby].clients) {\n      if (client.isHost) host = {\n        avatar: client.avatar,\n        connected: client.connected,\n        username: client.username\n      }\n      else players.push({\n        avatar: client.avatar,\n        connected: client.connected,\n        score: client.score,\n        username: client.username\n      })\n    }\n    return {\n      board: this.lobbies[lobby].board,\n      buzzer: this.lobbies[lobby].buzzer,\n      host: host,\n      players: players,\n      state: this.lobbies[lobby].state\n    }\n  }\n  setState (lobby, state) {\n    this.lobbies[lobby].state = state\n  }\n\n  /*\n   *  Card Functions\n   *\n   * \n  */\n  async getAnswer (questionId) {\n    const q = await Question.findById(questionId)\n    return q.format()\n  }\n  async getQuestion (questionId) {\n    let q = await Question.findById(questionId)\n    q = q.format()\n    return {\n      content: q.content,\n      id: q.id,\n      price: q.price,\n      topic: q.topic\n    }\n  }\n\n  /**\n   * Notify any Websocket connections that are subscribed to\n   * the given id that an event has occurred.\n   * @param lobbyId The ID of the game\n   * @param event The event that was triggered\n   * @param msg The Invoice data\n   */\n  async notify (lobbyId, event, msg) {\n    try {\n      if (this.lobbies[lobbyId].clients) {\n        // Compile payload\n        var payload = Object.assign({ event: event }, msg)\n\n        for (const player of this.lobbies[lobbyId].clients) {\n          player.client.emit(event, payload)\n        }\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n\nconst jeopardy = new Jeopardy()\n\nmodule.exports = jeopardy"
      ]
    },
    "sourceType": "script",
    "mtime": 1614233423701
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/routes/upload/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/routes/upload/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/upload/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/routes/upload/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/routes/upload/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/routes/upload/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/upload/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar config = require('../../config');\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar multer = require('multer');\n\nvar path = require('path');\n\nvar Filter = require('../../resources/fileFilter');\n/**\n  * Upload Management routes\n  * @memberof Routes\n  */\n\n\nvar UploadRoute = /*#__PURE__*/function () {\n  function UploadRoute() {\n    _classCallCheck(this, UploadRoute);\n\n    router.post('/', new multer({\n      dest: './uploads/'\n    }).single('file'), this.uploadFile);\n    return router;\n  }\n\n  _createClass(UploadRoute, [{\n    key: \"uploadFile\",\n    value: function () {\n      var _uploadFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n        var files;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                files = req.file;\n                console.log(files);\n\n                if (!files) {\n                  res.send('No file found');\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function uploadFile(_x, _x2) {\n        return _uploadFile.apply(this, arguments);\n      }\n\n      return uploadFile;\n    }()\n  }]);\n\n  return UploadRoute;\n}();\n\nmodule.exports = new UploadRoute();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsInJlcXVpcmUiLCJleHByZXNzIiwicm91dGVyIiwiUm91dGVyIiwibXVsdGVyIiwicGF0aCIsIkZpbHRlciIsIlVwbG9hZFJvdXRlIiwicG9zdCIsImRlc3QiLCJzaW5nbGUiLCJ1cGxvYWRGaWxlIiwicmVxIiwicmVzIiwiZmlsZXMiLCJmaWxlIiwiY29uc29sZSIsImxvZyIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUF0Qjs7QUFFQSxJQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1FLE1BQU0sR0FBR0QsT0FBTyxDQUFDRSxNQUFSLEVBQWY7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNSyxJQUFJLEdBQUdMLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1NLE1BQU0sR0FBR04sT0FBTyxDQUFDLDRCQUFELENBQXRCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztJQUNNTyxXO0FBQ0oseUJBQWU7QUFBQTs7QUFDYkwsSUFBQUEsTUFBTSxDQUFDTSxJQUFQLENBQVksR0FBWixFQUFpQixJQUFJSixNQUFKLENBQVc7QUFBRUssTUFBQUEsSUFBSSxFQUFFO0FBQVIsS0FBWCxFQUFtQ0MsTUFBbkMsQ0FBMEMsTUFBMUMsQ0FBakIsRUFBb0UsS0FBS0MsVUFBekU7QUFFRixXQUFPVCxNQUFQO0FBQ0M7Ozs7O2dGQUVELGlCQUFrQlUsR0FBbEIsRUFBdUJDLEdBQXZCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNNQyxnQkFBQUEsS0FETixHQUNjRixHQUFHLENBQUNHLElBRGxCO0FBRUFDLGdCQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsS0FBWjs7QUFFQSxvQkFBSSxDQUFDQSxLQUFMLEVBQVk7QUFDWEQsa0JBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLGVBQVQ7QUFDQTs7QUFORDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7Ozs7Ozs7O0FBWUZDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixJQUFJYixXQUFKLEVBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2hhcnZtYXN0ZXIvUHJvamVjdHMvR2FtZXNob3cvYXBpL3JvdXRlcy91cGxvYWQvIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoJy4uLy4uL2NvbmZpZycpXG5cbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBGaWx0ZXIgPSByZXF1aXJlKCcuLi8uLi9yZXNvdXJjZXMvZmlsZUZpbHRlcicpXG5cbi8qKlxuICAqIFVwbG9hZCBNYW5hZ2VtZW50IHJvdXRlc1xuICAqIEBtZW1iZXJvZiBSb3V0ZXNcbiAgKi9cbmNsYXNzIFVwbG9hZFJvdXRlIHtcbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHJvdXRlci5wb3N0KCcvJywgbmV3IG11bHRlcih7IGRlc3Q6ICcuL3VwbG9hZHMvJyB9KS5zaW5nbGUoJ2ZpbGUnKSwgdGhpcy51cGxvYWRGaWxlKVxuXHRcdFxuXHRcdHJldHVybiByb3V0ZXJcbiAgfVxuXG4gIGFzeW5jIHVwbG9hZEZpbGUgKHJlcSwgcmVzKSB7XG5cdFx0Y29uc3QgZmlsZXMgPSByZXEuZmlsZVxuXHRcdGNvbnNvbGUubG9nKGZpbGVzKVxuXHRcdFxuXHRcdGlmICghZmlsZXMpIHtcblx0XHRcdHJlcy5zZW5kKCdObyBmaWxlIGZvdW5kJylcblx0XHR9XG5cblx0fVxuIFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBVcGxvYWRSb3V0ZSgpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "config",
        "require",
        "express",
        "router",
        "Router",
        "multer",
        "path",
        "Filter",
        "UploadRoute",
        "post",
        "dest",
        "single",
        "uploadFile",
        "req",
        "res",
        "files",
        "file",
        "console",
        "log",
        "send",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AAEA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAME,MAAM,GAAGD,OAAO,CAACE,MAAR,EAAf;;AACA,IAAMC,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMM,MAAM,GAAGN,OAAO,CAAC,4BAAD,CAAtB;AAEA;AACA;AACA;AACA;;;IACMO,W;AACJ,yBAAe;AAAA;;AACbL,IAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiB,IAAIJ,MAAJ,CAAW;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAX,EAAmCC,MAAnC,CAA0C,MAA1C,CAAjB,EAAoE,KAAKC,UAAzE;AAEF,WAAOT,MAAP;AACC;;;;;gFAED,iBAAkBU,GAAlB,EAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,gBAAAA,KADN,GACcF,GAAG,CAACG,IADlB;AAEAC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,oBAAI,CAACA,KAAL,EAAY;AACXD,kBAAAA,GAAG,CAACK,IAAJ,CAAS,eAAT;AACA;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAYFC,MAAM,CAACC,OAAP,GAAiB,IAAIb,WAAJ,EAAjB",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/upload/",
      "sourcesContent": [
        "'use strict'\n\nconst config = require('../../config')\n\nconst express = require('express')\nconst router = express.Router()\nconst multer = require('multer')\nconst path = require('path')\nconst Filter = require('../../resources/fileFilter')\n\n/**\n  * Upload Management routes\n  * @memberof Routes\n  */\nclass UploadRoute {\n  constructor () {\n    router.post('/', new multer({ dest: './uploads/' }).single('file'), this.uploadFile)\n\t\t\n\t\treturn router\n  }\n\n  async uploadFile (req, res) {\n\t\tconst files = req.file\n\t\tconsole.log(files)\n\t\t\n\t\tif (!files) {\n\t\t\tres.send('No file found')\n\t\t}\n\n\t}\n \n}\n\nmodule.exports = new UploadRoute()\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1615241562737
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/resources/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/resources/fileFilter.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/resources/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/resources/fileFilter.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/resources/fileFilter.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/resources/fileFilter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/resources/",
        "sourceFileName": "fileFilter.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar imageFilter = function imageFilter(req, file, cb) {\n  // Accept images only\n  if (!file.originalname.match(/\\.(jpg|JPG|jpeg|JPEG|png|PNG|gif|GIF)$/)) {\n    req.fileValidationError = 'Only image files are allowed!';\n    return cb(new Error('Only image files are allowed!'), false);\n  }\n\n  cb(null, true);\n};\n\nexports.imageFilter = imageFilter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGVGaWx0ZXIuanMiXSwibmFtZXMiOlsiaW1hZ2VGaWx0ZXIiLCJyZXEiLCJmaWxlIiwiY2IiLCJvcmlnaW5hbG5hbWUiLCJtYXRjaCIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJFcnJvciIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBU0MsR0FBVCxFQUFjQyxJQUFkLEVBQW9CQyxFQUFwQixFQUF3QjtBQUN4QztBQUNBLE1BQUksQ0FBQ0QsSUFBSSxDQUFDRSxZQUFMLENBQWtCQyxLQUFsQixDQUF3Qix3Q0FBeEIsQ0FBTCxFQUF3RTtBQUNwRUosSUFBQUEsR0FBRyxDQUFDSyxtQkFBSixHQUEwQiwrQkFBMUI7QUFDQSxXQUFPSCxFQUFFLENBQUMsSUFBSUksS0FBSixDQUFVLCtCQUFWLENBQUQsRUFBNkMsS0FBN0MsQ0FBVDtBQUNIOztBQUNESixFQUFBQSxFQUFFLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBRjtBQUNILENBUEQ7O0FBUUFLLE9BQU8sQ0FBQ1IsV0FBUixHQUFzQkEsV0FBdEIiLCJzb3VyY2VSb290IjoiL2hvbWUvaGFydm1hc3Rlci9Qcm9qZWN0cy9HYW1lc2hvdy9hcGkvcmVzb3VyY2VzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGltYWdlRmlsdGVyID0gZnVuY3Rpb24ocmVxLCBmaWxlLCBjYikge1xuICAgIC8vIEFjY2VwdCBpbWFnZXMgb25seVxuICAgIGlmICghZmlsZS5vcmlnaW5hbG5hbWUubWF0Y2goL1xcLihqcGd8SlBHfGpwZWd8SlBFR3xwbmd8UE5HfGdpZnxHSUYpJC8pKSB7XG4gICAgICAgIHJlcS5maWxlVmFsaWRhdGlvbkVycm9yID0gJ09ubHkgaW1hZ2UgZmlsZXMgYXJlIGFsbG93ZWQhJztcbiAgICAgICAgcmV0dXJuIGNiKG5ldyBFcnJvcignT25seSBpbWFnZSBmaWxlcyBhcmUgYWxsb3dlZCEnKSwgZmFsc2UpO1xuICAgIH1cbiAgICBjYihudWxsLCB0cnVlKTtcbn07XG5leHBvcnRzLmltYWdlRmlsdGVyID0gaW1hZ2VGaWx0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "fileFilter.js"
      ],
      "names": [
        "imageFilter",
        "req",
        "file",
        "cb",
        "originalname",
        "match",
        "fileValidationError",
        "Error",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAASC,GAAT,EAAcC,IAAd,EAAoBC,EAApB,EAAwB;AACxC;AACA,MAAI,CAACD,IAAI,CAACE,YAAL,CAAkBC,KAAlB,CAAwB,wCAAxB,CAAL,EAAwE;AACpEJ,IAAAA,GAAG,CAACK,mBAAJ,GAA0B,+BAA1B;AACA,WAAOH,EAAE,CAAC,IAAII,KAAJ,CAAU,+BAAV,CAAD,EAA6C,KAA7C,CAAT;AACH;;AACDJ,EAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACH,CAPD;;AAQAK,OAAO,CAACR,WAAR,GAAsBA,WAAtB",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/resources/",
      "sourcesContent": [
        "const imageFilter = function(req, file, cb) {\n    // Accept images only\n    if (!file.originalname.match(/\\.(jpg|JPG|jpeg|JPEG|png|PNG|gif|GIF)$/)) {\n        req.fileValidationError = 'Only image files are allowed!';\n        return cb(new Error('Only image files are allowed!'), false);\n    }\n    cb(null, true);\n};\nexports.imageFilter = imageFilter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1614591952735
  },
  "{\"sourceRoot\":\"/home/harvmaster/Projects/Gameshow/api/routes/file/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/harvmaster/Projects/Gameshow/api\",\"filename\":\"/home/harvmaster/Projects/Gameshow/api/routes/file/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/harvmaster/Projects/Gameshow/api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.17": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/file/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/harvmaster/Projects/Gameshow/api",
      "filename": "/home/harvmaster/Projects/Gameshow/api/routes/file/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/harvmaster/Projects/Gameshow/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/harvmaster/Projects/Gameshow/api/routes/file/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/harvmaster/Projects/Gameshow/api/routes/file/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/file/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar config = require('../../config');\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar multer = require('multer');\n\nvar path = require('path');\n\nvar Filter = require('../../resources/fileFilter');\n/**\n  * Upload Management routes\n  * @memberof Routes\n  */\n\n\nvar UploadRoute = /*#__PURE__*/function () {\n  function UploadRoute() {\n    _classCallCheck(this, UploadRoute);\n\n    router.post('/', new multer({\n      dest: './uploads/'\n    }).single('file'), this.uploadFile);\n    router.get('/:url', this.getFile);\n    return router;\n  }\n\n  _createClass(UploadRoute, [{\n    key: \"uploadFile\",\n    value: function () {\n      var _uploadFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n        var files;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                files = req.file;\n                console.log(files);\n\n                if (files) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", res.send('No file found'));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function uploadFile(_x, _x2) {\n        return _uploadFile.apply(this, arguments);\n      }\n\n      return uploadFile;\n    }()\n  }, {\n    key: \"getFile\",\n    value: function () {\n      var _getFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", res.sendFile(req.url));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getFile(_x3, _x4) {\n        return _getFile.apply(this, arguments);\n      }\n\n      return getFile;\n    }()\n  }]);\n\n  return UploadRoute;\n}();\n\nmodule.exports = new UploadRoute();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsInJlcXVpcmUiLCJleHByZXNzIiwicm91dGVyIiwiUm91dGVyIiwibXVsdGVyIiwicGF0aCIsIkZpbHRlciIsIlVwbG9hZFJvdXRlIiwicG9zdCIsImRlc3QiLCJzaW5nbGUiLCJ1cGxvYWRGaWxlIiwiZ2V0IiwiZ2V0RmlsZSIsInJlcSIsInJlcyIsImZpbGVzIiwiZmlsZSIsImNvbnNvbGUiLCJsb2ciLCJzZW5kIiwic2VuZEZpbGUiLCJ1cmwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUF0Qjs7QUFFQSxJQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1FLE1BQU0sR0FBR0QsT0FBTyxDQUFDRSxNQUFSLEVBQWY7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNSyxJQUFJLEdBQUdMLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1NLE1BQU0sR0FBR04sT0FBTyxDQUFDLDRCQUFELENBQXRCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztJQUNNTyxXO0FBQ0oseUJBQWU7QUFBQTs7QUFDYkwsSUFBQUEsTUFBTSxDQUFDTSxJQUFQLENBQVksR0FBWixFQUFpQixJQUFJSixNQUFKLENBQVc7QUFBRUssTUFBQUEsSUFBSSxFQUFFO0FBQVIsS0FBWCxFQUFtQ0MsTUFBbkMsQ0FBMEMsTUFBMUMsQ0FBakIsRUFBb0UsS0FBS0MsVUFBekU7QUFDSFQsSUFBQUEsTUFBTSxDQUFDVSxHQUFQLENBQVcsT0FBWCxFQUFvQixLQUFLQyxPQUF6QjtBQUVDLFdBQU9YLE1BQVA7QUFDQzs7Ozs7Z0ZBRUQsaUJBQWtCWSxHQUFsQixFQUF1QkMsR0FBdkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ01DLGdCQUFBQSxLQUROLEdBQ2NGLEdBQUcsQ0FBQ0csSUFEbEI7QUFFQUMsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxLQUFaOztBQUZBLG9CQUlLQSxLQUpMO0FBQUE7QUFBQTtBQUFBOztBQUFBLGlEQUtRRCxHQUFHLENBQUNLLElBQUosQ0FBUyxlQUFULENBTFI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTzs7Ozs7Ozs7Ozs7NkVBV0Esa0JBQWVOLEdBQWYsRUFBb0JDLEdBQXBCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxrREFDU0EsR0FBRyxDQUFDTSxRQUFKLENBQWFQLEdBQUcsQ0FBQ1EsR0FBakIsQ0FEVDs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7Ozs7Ozs7O0FBTUZDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixJQUFJakIsV0FBSixFQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9oYXJ2bWFzdGVyL1Byb2plY3RzL0dhbWVzaG93L2FwaS9yb3V0ZXMvZmlsZS8iLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgY29uZmlnID0gcmVxdWlyZSgnLi4vLi4vY29uZmlnJylcblxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJylcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbmNvbnN0IEZpbHRlciA9IHJlcXVpcmUoJy4uLy4uL3Jlc291cmNlcy9maWxlRmlsdGVyJylcblxuLyoqXG4gICogVXBsb2FkIE1hbmFnZW1lbnQgcm91dGVzXG4gICogQG1lbWJlcm9mIFJvdXRlc1xuICAqL1xuY2xhc3MgVXBsb2FkUm91dGUge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgcm91dGVyLnBvc3QoJy8nLCBuZXcgbXVsdGVyKHsgZGVzdDogJy4vdXBsb2Fkcy8nIH0pLnNpbmdsZSgnZmlsZScpLCB0aGlzLnVwbG9hZEZpbGUpXG5cdHJvdXRlci5nZXQoJy86dXJsJywgdGhpcy5nZXRGaWxlKVxuXHRcdFxuXHRcdHJldHVybiByb3V0ZXJcbiAgfVxuXG4gIGFzeW5jIHVwbG9hZEZpbGUgKHJlcSwgcmVzKSB7XG5cdFx0Y29uc3QgZmlsZXMgPSByZXEuZmlsZVxuXHRcdGNvbnNvbGUubG9nKGZpbGVzKVxuXHRcdFxuXHRcdGlmICghZmlsZXMpIHtcblx0XHRcdHJldHVybiByZXMuc2VuZCgnTm8gZmlsZSBmb3VuZCcpXG5cdFx0fVxuXHRcdC8vIHJldHVybiByZXMuanNvbih7IHVybDogIH0pXG5cblx0fVxuXG4gIGFzeW5jIGdldEZpbGUgKHJlcSwgcmVzKSB7XG4gICAgcmV0dXJuIHJlcy5zZW5kRmlsZShyZXEudXJsKVxuICB9XG4gXG59XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IFVwbG9hZFJvdXRlKClcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "config",
        "require",
        "express",
        "router",
        "Router",
        "multer",
        "path",
        "Filter",
        "UploadRoute",
        "post",
        "dest",
        "single",
        "uploadFile",
        "get",
        "getFile",
        "req",
        "res",
        "files",
        "file",
        "console",
        "log",
        "send",
        "sendFile",
        "url",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AAEA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAME,MAAM,GAAGD,OAAO,CAACE,MAAR,EAAf;;AACA,IAAMC,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMM,MAAM,GAAGN,OAAO,CAAC,4BAAD,CAAtB;AAEA;AACA;AACA;AACA;;;IACMO,W;AACJ,yBAAe;AAAA;;AACbL,IAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiB,IAAIJ,MAAJ,CAAW;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAX,EAAmCC,MAAnC,CAA0C,MAA1C,CAAjB,EAAoE,KAAKC,UAAzE;AACHT,IAAAA,MAAM,CAACU,GAAP,CAAW,OAAX,EAAoB,KAAKC,OAAzB;AAEC,WAAOX,MAAP;AACC;;;;;gFAED,iBAAkBY,GAAlB,EAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,gBAAAA,KADN,GACcF,GAAG,CAACG,IADlB;AAEAC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAFA,oBAIKA,KAJL;AAAA;AAAA;AAAA;;AAAA,iDAKQD,GAAG,CAACK,IAAJ,CAAS,eAAT,CALR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;6EAWA,kBAAeN,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kDACSA,GAAG,CAACM,QAAJ,CAAaP,GAAG,CAACQ,GAAjB,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAMFC,MAAM,CAACC,OAAP,GAAiB,IAAIjB,WAAJ,EAAjB",
      "sourceRoot": "/home/harvmaster/Projects/Gameshow/api/routes/file/",
      "sourcesContent": [
        "'use strict'\n\nconst config = require('../../config')\n\nconst express = require('express')\nconst router = express.Router()\nconst multer = require('multer')\nconst path = require('path')\nconst Filter = require('../../resources/fileFilter')\n\n/**\n  * Upload Management routes\n  * @memberof Routes\n  */\nclass UploadRoute {\n  constructor () {\n    router.post('/', new multer({ dest: './uploads/' }).single('file'), this.uploadFile)\n\trouter.get('/:url', this.getFile)\n\t\t\n\t\treturn router\n  }\n\n  async uploadFile (req, res) {\n\t\tconst files = req.file\n\t\tconsole.log(files)\n\t\t\n\t\tif (!files) {\n\t\t\treturn res.send('No file found')\n\t\t}\n\t\t// return res.json({ url:  })\n\n\t}\n\n  async getFile (req, res) {\n    return res.sendFile(req.url)\n  }\n \n}\n\nmodule.exports = new UploadRoute()\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1615242222064
  }
}